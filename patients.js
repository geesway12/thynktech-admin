import{db,saveDb}from"./db.js";import{generatePatientID,calculateAge,formatDate}from"./helpers.js";import{createVisitForm}from"./visits.js";import{renderServiceEntryForm}from"./services.js";import{renderAppointmentForm}from"./appointments.js";import{exportPatientA4}from"./export.js";const fieldTypes=[{value:"text",label:"Text"},{value:"integer",label:"Integer"},{value:"decimal",label:"Decimal"},{value:"select_one",label:"Single Select (select_one)"},{value:"select_multiple",label:"Multiple Select (select_multiple)"},{value:"date",label:"Date"},{value:"time",label:"Time"},{value:"datetime",label:"DateTime"},{value:"note",label:"Note/Label"},{value:"calculate",label:"Calculation"},{value:"image",label:"Image"},{value:"audio",label:"Audio"},{value:"video",label:"Video"},{value:"file",label:"File Upload"},{value:"barcode",label:"Barcode"},{value:"qr_code",label:"QR Code"},{value:"geopoint",label:"Geopoint"},{value:"geotrace",label:"Geotrace"},{value:"geoshape",label:"Geoshape"}];function getReverseRelationship(e){switch(e){case"child":return"parent";case"father":case"mother":case"parent":return"child";case"partner":return"partner";default:return"related to"}}export function renderPatientList(e){function t(){if(e.innerHTML='\n      <div class="container my-4">\n        <div class="d-flex justify-content-between align-items-center">\n          <h4><i class="bi bi-people"></i> Patients</h4>\n        </div>\n        <div class="mb-3 d-flex gap-2">\n          <button class="btn btn-success" type="button" id="addBtn"><i class="bi bi-person-plus"></i> New Patient</button>\n        </div>\n        <form id="searchForm" class="row g-2 mb-3">\n          <div class="col-md-5"><input name="q" class="form-control" placeholder="Search by ID or Name" /></div>\n          <div class="col-md-2"><button class="btn btn-primary w-100" type="submit"><i class="bi bi-search"></i> Search</button></div>\n        </form>\n        <div id="modalWrap"></div>\n        <div class="table-responsive">\n          <table class="table table-bordered table-hover align-middle patient-table-mobile">\n            <thead class="table-light">\n              <tr>\n                <th>ID</th><th>Name</th><th class="d-none d-md-table-cell">Reg&nbsp;Date</th><th class="d-none d-md-table-cell">DOB</th><th class="d-none d-md-table-cell">Age</th>\n                <th class="d-none d-md-table-cell">Sex</th><th class="d-none d-md-table-cell">Phone</th><th class="d-none d-md-table-cell">Family</th><th>Actions</th>\n              </tr>\n            </thead>\n            <tbody id="listBody"></tbody>\n          </table>\n        </div>\n        <a href="#admin-dashboard" class="btn btn-link mt-2"><i class="bi bi-arrow-left"></i> Back</a>\n      </div>\n    ',!document.getElementById("patients-mobile-style")){const e=document.createElement("style");e.id="patients-mobile-style",e.textContent="\n        @media (max-width: 768px) {\n          .patient-table-mobile thead { display: none; }\n          .patient-table-mobile tr { display: block; margin-bottom: 1rem; border: 1px solid #dee2e6; border-radius: 8px; }\n          .patient-table-mobile td { display: flex; justify-content: space-between; align-items: center; padding: 0.5rem 1rem; border: none; border-bottom: 1px solid #eee; }\n          .patient-table-mobile td:last-child { border-bottom: none; }\n          .patient-table-mobile td:before {\n            content: attr(data-label);\n            font-weight: bold;\n            flex: 0 0 40%;\n            color: #555;\n          }\n          .patient-table-mobile td { flex-direction: row; }\n          .patient-table-mobile td:not(:nth-child(1)):not(:nth-child(2)):not(:last-child) { display: none !important; }\n        }\n      ",document.head.appendChild(e)}document.getElementById("addBtn").onclick=()=>a(),document.getElementById("searchForm").onsubmit=e=>{e.preventDefault(),n(Object.fromEntries(new FormData(e.target)))},n()}function a(a={}){e.innerHTML=`\n      <div class="container my-4">\n        <div class="d-flex justify-content-between align-items-center mb-2">\n          <h4><i class="bi bi-person-plus"></i> ${a.patientID?"Edit":"New"} Patient</h4>\n          <button class="btn btn-outline-secondary" id="backToListBtn"><i class="bi bi-arrow-left"></i> Back to List</button>\n        </div>\n        <div class="mb-3 d-flex gap-2">\n          <button class="btn btn-outline-secondary" type="button" id="manageFieldsBtn"><i class="bi bi-sliders"></i> Manage Custom Fields</button>\n        </div>\n        <div id="formWrap"></div>\n        <div id="modalWrap"></div>\n      </div>\n    `,document.getElementById("backToListBtn").onclick=()=>t(),document.getElementById("manageFieldsBtn").onclick=i,function(e={}){const a=(new Date).toISOString().slice(0,10),n=document.getElementById("formWrap");if(!n)return;n.innerHTML=`\n      <div class="modal-content mx-auto" style="max-width:600px;">\n        <form id="pForm" class="mt-2" autocomplete="off" novalidate>\n          <div class="row g-2">\n            <div class="col-md-6">\n              <label class="form-label mb-0">Date of Registration</label>\n              <input  type="date" id="dor" class="form-control mb-2" value="${e.registrationDate||a}" max="${a}" required>\n            </div>\n            <div class="col-md-6">\n              <label class="form-label mb-0">Date of Birth</label>\n              <input  type="date" id="dob" class="form-control" value="${e.dob||""}" max="${a}" required>\n              <small id="ageLive" class="text-muted mb-2 d-block"></small>\n            </div>\n          </div>\n          <div class="row g-2">\n            <div class="col-md-6">\n              <input id="surname" class="form-control mb-2" placeholder="Surname" required value="${e.surname||""}">\n            </div>\n            <div class="col-md-6">\n              <input id="otherNames" class="form-control mb-2" placeholder="Other Names" required value="${e.otherNames||""}">\n            </div>\n          </div>\n          <div class="row g-2">\n            <div class="col-md-6">\n              <select id="sex" class="form-select mb-2" required>\n                <option value="">Sex</option>\n                <option value="M"${"M"===e.sex?" selected":""}>Male</option>\n                <option value="F"${"F"===e.sex?" selected":""}>Female</option>\n                <option value="O"${"O"===e.sex?" selected":""}>Other</option>\n              </select>\n            </div>\n            <div class="col-md-6">\n              <input id="phone" class="form-control mb-2" placeholder="Phone 024-xxx-xxxx" required maxlength="13" pattern="0[0-9]{9}" value="${e.phone||""}">\n              <div class="invalid-feedback" id="phoneError">Phone must be 10 digits, e.g. 0241234567</div>\n            </div>\n          </div>\n          <input id="address" class="form-control mb-2" placeholder="Address" required value="${e.address||""}">\n          <div class="row g-2">\n            <div class="col-md-6">\n              <select id="idType" class="form-select mb-2" required>\n                <option value="">ID Type</option>\n                <option value="GhanaCard"${"GhanaCard"===e.idType?" selected":""}>Ghana Card</option>\n                <option value="NIN"${"NIN"===e.idType?" selected":""}>National ID (Legacy)</option>\n                <option value="DL" ${"DL"===e.idType?" selected":""}>Driver's License</option>\n                <option value="VOT"${"VOT"===e.idType?" selected":""}>Voter's Card</option>\n                <option value="Passport"${"Passport"===e.idType?" selected":""}>Passport</option>\n              </select>\n            </div>\n            <div class="col-md-6">\n              <input id="idNumber" class="form-control mb-2" placeholder="ID Number (e.g., GHA-123456789-0)" required value="${e.idNumber||""}" \n                     pattern="${"GhanaCard"===e.idType?"GHA-[0-9]{9}-[0-9]|[0-9]{15}":""}" \n                     title="${"GhanaCard"===e.idType?"Ghana Card format: GHA-123456789-0 or 15 digits":"Enter valid ID number"}">\n              <div class="invalid-feedback" id="idError" style="display:none;">Invalid Ghana Card format. Use GHA-123456789-0 or 15 consecutive digits.</div>\n            </div>\n          </div>\n          <div class="row g-2">\n            <div class="col-md-8">\n              <label class="form-label mb-0">Family (link to existing patient)</label>\n              <select id="familyId" class="form-select mb-2">\n                <option value="">-- None --</option>\n                ${(db.patients||[]).filter(t=>t.patientID!==e.patientID).map(t=>`<option value="${t.patientID}"${e.familyId===t.patientID?" selected":""}>${t.surname||""} ${t.otherNames||""} (${t.patientID})</option>`).join("")}\n              </select>\n            </div>\n            <div class="col-md-4">\n              <label class="form-label mb-0">Relationship</label>\n              <select id="familyRelationship" class="form-select mb-2">\n                <option value="">-- Select --</option>\n                <option value="partner"${"partner"===e.familyRelationship?" selected":""}>Partner</option>\n                <option value="child"${"child"===e.familyRelationship?" selected":""}>Child</option>\n                <option value="father"${"father"===e.familyRelationship?" selected":""}>Father</option>\n                <option value="mother"${"mother"===e.familyRelationship?" selected":""}>Mother</option>\n                <option value="other"${"other"===e.familyRelationship?" selected":""}>Other</option>\n              </select>\n            </div>\n          </div>\n          <div class="card card-body mb-3 bg-light">\n            <div class="fw-bold mb-2">Custom Fields</div>\n            <div class="mt-3" id="customFieldsInputs">\n              ${(db.customPatientFields||[]).map(t=>renderCustomField(t,e)).join("")}\n            </div>\n          </div>\n          <div class="d-flex justify-content-between">\n            <button class="btn btn-primary">${e.patientID?"Save":"Add"}</button>\n          </div>\n        </form>\n      </div>`;const i=document.getElementById("pForm"),l=i.dob,s=i.querySelector("#ageLive"),o=(i.phone,document.getElementById("phoneError")),d=document.getElementById("idError"),c=()=>s.textContent=l.value?`Age: ${calculateAge(l.value)}`:"";l.addEventListener("input",c),c();const r=e=>{if("phone"===e.id){const t=e.value.replace(/\D/g,"");t&&10===t.length&&t.startsWith("0")?(e.classList.remove("is-invalid"),e.classList.add("is-valid"),o.style.display="none"):(e.classList.add("is-invalid"),e.classList.remove("is-valid"),o.style.display="block")}else if("idNumber"===e.id){const t=i.idType.value,a=e.value.trim();if("GhanaCard"===t&&a){const t=/^[0-9]{15}$/;/^GHA-[0-9]{9}-[0-9]$/.test(a)||t.test(a)?(e.classList.remove("is-invalid"),e.classList.add("is-valid"),d.style.display="none",e.setCustomValidity("")):(e.classList.add("is-invalid"),e.classList.remove("is-valid"),d.style.display="block",e.setCustomValidity("Invalid Ghana Card format. Use GHA-123456789-0 or 15 consecutive digits."))}else e.hasAttribute("required")&&!a?(e.classList.add("is-invalid"),e.classList.remove("is-valid"),d.style.display="none",e.setCustomValidity("ID Number is required.")):(e.classList.remove("is-invalid"),e.classList.add("is-valid"),d.style.display="none",e.setCustomValidity(""))}else e.hasAttribute("required")&&(e.value.trim()?(e.classList.remove("is-invalid"),e.classList.add("is-valid")):(e.classList.add("is-invalid"),e.classList.remove("is-valid")))};Array.from(i.elements).forEach(e=>{"INPUT"!==e.tagName&&"SELECT"!==e.tagName||(e.addEventListener("input",()=>r(e)),r(e))}),i.onsubmit=a=>{a.preventDefault();let n=!0;if(Array.from(i.elements).forEach(e=>{if("phone"===e.id){const t=e.value.replace(/\D/g,"");t&&10===t.length&&t.startsWith("0")||(e.classList.add("is-invalid"),e.classList.remove("is-valid"),n=!1)}else if("idNumber"===e.id){const t=i.idType.value,a=e.value.trim();if("GhanaCard"===t&&a){const t=/^[0-9]{15}$/;/^GHA-[0-9]{9}-[0-9]$/.test(a)||t.test(a)||(e.classList.add("is-invalid"),e.classList.remove("is-valid"),n=!1)}else e.hasAttribute("required")&&!a&&(e.classList.add("is-invalid"),e.classList.remove("is-valid"),n=!1)}else e.hasAttribute("required")&&!e.value.trim()&&(e.classList.add("is-invalid"),e.classList.remove("is-valid"),n=!1)}),!n)return;const l=Object.assign({},e);if(l.registrationDate=i.dor.value,l.dob=i.dob.value,l.surname=i.surname.value.trim(),l.otherNames=i.otherNames.value.trim(),l.sex=i.sex.value,l.phone=i.phone.value.trim(),l.address=i.address.value.trim(),l.idType=i.idType.value,l.idNumber=i.idNumber.value.trim(),l.familyId=i.familyId.value,l.familyRelationship=i.familyRelationship.value,l.age=l.dob?calculateAge(l.dob):"",l.customFields=l.customFields||{},(db.customPatientFields||[]).forEach(e=>{const t=document.getElementById(`custom_${e.name}`);t&&(l.customFields[e.name]=t.value)}),l.patientID||(l.patientID=generatePatientID(i.dor.value)),e.patientID){const t=db.patients.findIndex(t=>t.patientID===e.patientID);-1!==t&&(db.patients[t]=l)}else db.patients.push(l);saveDb(),t()},(db.customPatientFields||[]).forEach(e=>{if("select_multiple"===e.type){const t=document.querySelectorAll(`input[id^="custom_${e.name}_"]`),a=document.getElementById(`custom_${e.name}`);t.length>0&&a&&t.forEach(e=>{e.addEventListener("change",()=>{const e=Array.from(t).filter(e=>e.checked).map(e=>e.value);a.value=e.join(", ")})})}});const m=i.idType,u=i.idNumber,b=()=>{const e=m.value;"GhanaCard"===e?(u.placeholder="Ghana Card (GHA-123456789-0 or 15 digits)",u.pattern="GHA-[0-9]{9}-[0-9]|[0-9]{15}",u.title="Ghana Card format: GHA-123456789-0 or 15 consecutive digits"):"Passport"===e?(u.placeholder="Passport Number (e.g., G1234567)",u.pattern="[A-Z][0-9]{7}",u.title="Passport format: G1234567"):(u.placeholder="ID Number",u.removeAttribute("pattern"),u.title="Enter valid ID number"),r(u)};m.addEventListener("change",b),b()}(a)}function n(e={}){let t=db.patients||[];if(e.q){const a=e.q.toLowerCase();t=t.filter(e=>e.patientID&&e.patientID.toLowerCase().includes(a)||e.surname&&e.surname.toLowerCase().includes(a)||e.otherNames&&e.otherNames.toLowerCase().includes(a))}const i=document.getElementById("listBody");i&&(i.innerHTML=0===t.length?'<tr><td colspan="9" class="text-center text-muted">No patients found.</td></tr>':t.map((e,t)=>{const a=`${e.surname||""} ${e.otherNames||""}`.trim();let n="";const i=[];if(e.familyId){const t=(db.patients||[]).find(t=>t.patientID===e.familyId);if(t){const a=e.familyRelationship||"related to";i.push(`${t.surname||""} ${t.otherNames||""} (${a})`)}}return(db.patients||[]).filter(t=>t.familyId===e.patientID).forEach(e=>{const t=getReverseRelationship(e.familyRelationship);i.push(`${e.surname||""} ${e.otherNames||""} (${t})`)}),n=i.length>0?i.join(", "):"",`\n      <tr>\n        <td data-label="ID">${e.patientID||""}</td>\n        <td data-label="Name">${a}</td>\n        <td class="d-none d-md-table-cell" data-label="Reg Date">${formatDate(e.registrationDate)||""}</td>\n        <td class="d-none d-md-table-cell" data-label="DOB">${formatDate(e.dob)||""}</td>\n        <td class="d-none d-md-table-cell" data-label="Age">${e.age??""}</td>\n        <td class="d-none d-md-table-cell" data-label="Sex">${e.sex||""}</td>\n        <td class="d-none d-md-table-cell" data-label="Phone">${e.phone||""}</td>\n        <td class="d-none d-md-table-cell" data-label="Family">${n}</td>\n        <td data-label="Actions">\n          <button class="btn btn-sm btn-primary me-1" data-i="${t}" data-act="view" title="View/Edit"><i class="bi bi-eye"></i></button>\n          <button class="btn btn-sm btn-danger me-1" data-i="${t}" data-act="del" title="Delete"><i class="bi bi-trash"></i></button>\n          <button class="btn btn-sm btn-outline-success me-1" data-i="${t}" data-act="visit" title="Log Visit"><i class="bi bi-journal-plus"></i></button>\n          <button class="btn btn-sm btn-outline-secondary me-1" data-i="${t}" data-act="service" title="Service Entry"><i class="bi bi-ui-checks-grid"></i></button>\n          <button class="btn btn-sm btn-outline-primary me-1" data-i="${t}" data-act="appoint" title="Book Appointment"><i class="bi bi-calendar-plus"></i></button>\n          <button class="btn btn-sm btn-outline-info" data-i="${t}" data-act="pdf" title="Download PDF Report"><i class="bi bi-file-earmark-pdf"></i></button>\n        </td>\n      </tr>\n      <tr class="visit-form-row d-none" data-form-i="${t}">\n        <td colspan="9"><div class="visit-form-container"></div></td>\n      </tr>`}).join(""),document.querySelectorAll("[data-act=view]").forEach(e=>e.onclick=()=>a(t[e.dataset.i])),document.querySelectorAll("[data-act=del]").forEach(e=>e.onclick=()=>{confirm("Delete this patient?")&&(db.patients.splice(e.dataset.i,1),saveDb(),n())}),document.querySelectorAll("[data-act=visit]").forEach(e=>e.onclick=()=>{const a=e.dataset.i,n=t[a],i=document.querySelector(`.visit-form-row[data-form-i="${a}"]`),l=i.querySelector(".visit-form-container"),s=!i.classList.contains("d-none");document.querySelectorAll(".visit-form-row").forEach(e=>e.classList.add("d-none")),s||(l.innerHTML="",l.appendChild(createVisitForm(n,()=>{setTimeout(()=>i.classList.add("d-none"),2e3)})),i.classList.remove("d-none"))}),document.querySelectorAll("[data-act=service]").forEach(e=>e.onclick=()=>{const a=e.dataset.i,n=t[a];renderServiceEntryForm(n,db.registers||[])}),document.querySelectorAll("[data-act=appoint]").forEach(e=>e.onclick=()=>{const a=e.dataset.i,n=t[a],i=db.registers&&db.registers.length?db.registers[0].name:"General",s=(new Date).toISOString().slice(0,10),o=document.getElementById("modalWrap");o.innerHTML=`\n        <div class="modal-content mx-auto" style="max-width:400px;">\n          <h5>Book Appointment for <span class="text-primary">${n.surname||""} ${n.otherNames||""}</span></h5>\n          <form id="quickAptForm" class="mt-3">\n            <div class="mb-3">\n              <label class="form-label">Service</label>\n              <select class="form-select" id="aptService" required>\n                ${(db.registers||[]).map(e=>`<option value="${e.name}"${e.name===i?" selected":""}>${e.name}</option>`).join("")}\n              </select>\n            </div>\n            <div class="mb-3">\n              <label class="form-label">Date</label>\n              <input type="date" class="form-control" id="aptDate" min="${s}" value="${s}" required>\n            </div>\n            <div class="mb-3">\n              <label class="form-label">Notes (optional)</label>\n              <textarea class="form-control" id="aptNotes" rows="2"></textarea>\n            </div>\n            <div class="d-flex justify-content-between">\n              <button class="btn btn-primary"><i class="bi bi-check2-circle"></i> Book</button>\n              <button type="button" class="btn btn-secondary" id="cancelAptBtn">Cancel</button>\n            </div>\n            <div id="aptMsg" class="mt-2"></div>\n          </form>\n        </div>\n      `,o.className="active",o.onclick=e=>{e.target===o&&l()},document.getElementById("cancelAptBtn").onclick=l,document.getElementById("quickAptForm").onsubmit=function(e){e.preventDefault();const t=document.getElementById("aptService").value,a=document.getElementById("aptDate").value,i=document.getElementById("aptNotes").value;if(!t||!a)return void(document.getElementById("aptMsg").innerHTML='<div class="alert alert-danger">Service and date are required.</div>');db.appointments=db.appointments||[],db.appointments.push({patientID:n.patientID,patientName:`${n.surname||""} ${n.otherNames||""}`.trim(),serviceType:t,appointmentDate:a,notes:i,status:"Scheduled",createdBy:db.currentUser?.username||"",timestamp:Date.now()}),saveDb(),document.getElementById("aptMsg").innerHTML='<div class="alert alert-success">Appointment booked!</div>',setTimeout(()=>{l()},1e3);document.getElementById("adminAptList")&&"function"==typeof window.renderAdminDashboard&&window.renderAdminDashboard(document.getElementById("app"))}}),document.querySelectorAll("[data-act=pdf]").forEach(e=>e.onclick=()=>{const a=e.dataset.i,n=t[a];exportPatientA4(n.patientID)}))}function i(){const e=document.getElementById("modalWrap");let t=(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join("");function a(){document.getElementById("customFieldList").innerHTML=(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join(""),n();const e=document.getElementById("customFieldsInputs");if(e){const t={};document.querySelectorAll('[id^="custom_"]').forEach(e=>{const a=e.id.replace("custom_","");t[a]=e.value}),e.innerHTML=(db.customPatientFields||[]).map(e=>renderCustomField(e,{customFields:t})).join("")}}function n(){document.querySelectorAll(".editFieldBtn").forEach(e=>e.onclick=()=>i(db.customPatientFields[e.dataset.fidx],e.dataset.fidx)),document.querySelectorAll(".deleteFieldBtn").forEach(e=>e.onclick=()=>{confirm("Delete this field? Data already captured for this field will be kept in old records.")&&(db.customPatientFields.splice(e.dataset.fidx,1),saveDb(),a())}),document.querySelectorAll(".moveUpBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t>0&&([db.customPatientFields[t-1],db.customPatientFields[t]]=[db.customPatientFields[t],db.customPatientFields[t-1]],saveDb(),a())}),document.querySelectorAll(".moveDownBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t<db.customPatientFields.length-1&&([db.customPatientFields[t],db.customPatientFields[t+1]]=[db.customPatientFields[t+1],db.customPatientFields[t]],saveDb(),a())})}function i(e={name:"",type:"text",required:!1},t=null){const n=document.getElementById("fieldFormContainer"),i=fieldTypes.map(t=>`<option value="${t.value}"${e.type===t.value?" selected":""}>${t.label}</option>`).join("");n.innerHTML=`<div class="card card-body mb-2 border-primary"><form id="fieldForm"><div class="row g-2 align-items-center"><div class="col-md-4"><input class="form-control" id="fieldName" placeholder="Field Name" required value="${e.name||""}"></div><div class="col-md-3"><select class="form-select" id="fieldType" required>${i}</select></div><div class="col-md-2 form-check"><input class="form-check-input" type="checkbox" id="fieldReq" ${e.required?"checked":""}><label class="form-check-label" for="fieldReq">Required</label></div><div class="col-md-3"><input class="form-control" id="fieldDefault" placeholder="Default Value" value="${e.default||""}"></div></div><div class="row g-2 mt-2"><div class="col-md-6"><input class="form-control" id="fieldConstraint" placeholder="Constraint/Validation (e.g. min=0,max=100)" value="${e.constraint||""}"></div><div class="col-md-6" id="choicesRow" style="display:${["select_one","select_multiple"].includes(e.type)?"block":"none"}"><input class="form-control" id="fieldChoices" placeholder="Choices (comma-separated, e.g. Yes,No,Unknown)" value="${e.choices||""}" ${["select_one","select_multiple"].includes(e.type)?"required":""}></div><div class="col-md-6" id="calcRow" style="display:${"calculate"===e.type?"block":"none"}"><input class="form-control" id="fieldCalc" placeholder="Calculation Formula (e.g. today() - dob)" value="${e.calc||""}"></div></div><div class="mt-2 d-flex justify-content-end gap-2"><button class="btn btn-primary">${null!==t?"Save Field":"Add Field"}</button><button type="button" class="btn btn-secondary" id="cancelFieldBtn">Cancel</button></div></form></div>`;n.querySelector("#fieldType").onchange=function(){const e=["select_one","select_multiple"].includes(this.value);n.querySelector("#choicesRow").style.display=e?"block":"none",n.querySelector("#fieldChoices").required=e,n.querySelector("#calcRow").style.display="calculate"===this.value?"block":"none"},n.querySelector("#cancelFieldBtn").onclick=()=>n.innerHTML="",n.querySelector("#fieldForm").onsubmit=function(e){e.preventDefault();let i={name:this.fieldName.value,type:this.fieldType.value,required:this.fieldReq.checked,default:this.fieldDefault.value,constraint:this.fieldConstraint.value};["select_one","select_multiple"].includes(i.type)&&(i.choices=this.fieldChoices.value),"calculate"===i.type&&(i.calc=this.fieldCalc.value),null!==t?db.customPatientFields[t]=i:db.customPatientFields.push(i),saveDb(),n.innerHTML="",a(),setTimeout(()=>{if(i.name){const e=document.getElementById(`custom_${i.name}`);e&&e.focus()}},100)}}e.innerHTML='<div class="modal-content mx-auto" style="max-width:500px;"><h5>Manage Custom Patient Fields</h5><div id="fieldFormContainer"></div><div class="d-flex justify-content-end mb-2"><button class="btn btn-sm btn-success" id="addFieldBtn"><i class="bi bi-plus"></i> Add Field</button></div><ul class="list-group mt-2" id="customFieldList">'+t+'</ul><div class="d-flex justify-content-end mt-3"><button class="btn btn-secondary" id="closeFieldMgr">Close</button></div></div>',e.className="active",e.onclick=t=>{t.target===e&&l()},document.getElementById("closeFieldMgr").onclick=()=>{e.className="",e.innerHTML=""},document.getElementById("addFieldBtn").onclick=()=>i(),n()}function l(){document.getElementById("modalWrap").className="",document.getElementById("modalWrap").innerHTML=""}t()}function renderCustomField(e,t){const a=t.customFields&&t.customFields[e.name]||"",n=`custom_${e.name}`;switch(e.type){case"text":default:return`<input id="${n}" class="form-control mb-2" placeholder="${e.label||e.name}" value="${a}">`;case"integer":return`<input id="${n}" type="number" step="1" class="form-control mb-2" placeholder="${e.label||e.name}" value="${a}">`;case"decimal":return`<input id="${n}" type="number" step="any" class="form-control mb-2" placeholder="${e.label||e.name}" value="${a}">`;case"date":return`<input id="${n}" type="date" class="form-control mb-2" value="${a}">`;case"select_one":{let t=e.choices;return"string"==typeof t&&(t=t.split(",").map(e=>e.trim()).filter(Boolean)),Array.isArray(t)||(t=[]),`<select id="${n}" class="form-select mb-2"><option value="">${e.label||e.name}</option>`+t.map(e=>`<option value="${e}"${a===e?" selected":""}>${e}</option>`).join("")+"</select>"}case"select_multiple":{let t=e.choices;return"string"==typeof t&&(t=t.split(",").map(e=>e.trim()).filter(Boolean)),Array.isArray(t)||(t=[]),'<div class="mb-2">'+t.map((e,t)=>{const i=a.split(",").map(e=>e.trim()).includes(e)?"checked":"";return`<div class="form-check form-check-inline">\n            <input class="form-check-input" type="checkbox" id="${n}_${t}" value="${e}" ${i}>\n            <label class="form-check-label" for="${n}_${t}">${e}</label>\n          </div>`}).join("")+`<input type="hidden" id="${n}" value="${a}"></div>`}case"note":return`<div class="alert alert-secondary mb-2">${e.label||e.name}</div>`}}function renderFieldRow(e,t){return`<li class="list-group-item d-flex justify-content-between align-items-center">\n    <span><b>${e.label||e.name}</b> <small class="text-muted">(${e.type})</small></span>\n    <span>\n      <button type="button" class="btn btn-sm btn-outline-primary editFieldBtn" data-fidx="${t}"><i class="bi bi-pencil"></i></button>\n      <button type="button" class="btn btn-sm btn-outline-danger deleteFieldBtn" data-fidx="${t}"><i class="bi bi-trash"></i></button>\n      <button type="button" class="btn btn-sm btn-outline-secondary moveUpBtn" data-fidx="${t}"><i class="bi bi-arrow-up"></i></button>\n      <button type="button" class="btn btn-sm btn-outline-secondary moveDownBtn" data-fidx="${t}"><i class="bi bi-arrow-down"></i></button>\n    </span>\n  </li>`}