let deferredPrompt,isOnline=navigator.onLine,updateAvailable=!1;export function registerServiceWorker(){"serviceWorker"in navigator&&(navigator.serviceWorker.register("service-worker.js").then(n=>{console.log("[PWA] Service worker registered successfully:",n),n.addEventListener("updatefound",()=>{const e=n.installing;e&&e.addEventListener("statechange",()=>{"installed"===e.state&&navigator.serviceWorker.controller&&(updateAvailable=!0,showUpdateNotification())})}),n.waiting&&(updateAvailable=!0,showUpdateNotification())}).catch(n=>{console.error("[PWA] Service worker registration failed:",n)}),navigator.serviceWorker.addEventListener("message",n=>{n.data&&"CACHE_UPDATED"===n.data.type&&showUpdateNotification()}))}export function initializeInstallPrompt(){window.addEventListener("beforeinstallprompt",n=>{n.preventDefault(),deferredPrompt=n,showInstallButton()}),window.addEventListener("appinstalled",()=>{console.log("[PWA] App was installed"),hideInstallButton(),showNotification("ThynkTech installed successfully!","success")})}function showInstallButton(){let n=document.getElementById("pwa-install-btn");if(!n){n=document.createElement("button"),n.id="pwa-install-btn",n.className="install-button",n.innerHTML='\n      <span style="margin-right: 8px;">ðŸ“±</span>\n      Install App\n    ',n.onclick=installApp;const e=document.querySelector(".header")||document.querySelector("header");e?e.appendChild(n):(n.style.cssText="\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        z-index: 1000;\n        background: #2196f3;\n        color: white;\n        border: none;\n        padding: 12px 16px;\n        border-radius: 8px;\n        cursor: pointer;\n        font-size: 14px;\n        box-shadow: 0 4px 12px rgba(33, 150, 243, 0.3);\n      ",document.body.appendChild(n))}n.style.display="inline-block"}function hideInstallButton(){const n=document.getElementById("pwa-install-btn");n&&(n.style.display="none")}async function installApp(){if(!deferredPrompt)return;const n=await deferredPrompt.prompt();console.log("[PWA] Install prompt result:",n),deferredPrompt=null,hideInstallButton()}export function initializeOfflineDetection(){window.addEventListener("online",()=>{isOnline=!0,hideOfflineNotification(),showNotification("Connection restored","success")}),window.addEventListener("offline",()=>{isOnline=!1,showOfflineNotification()}),isOnline||showOfflineNotification()}function showOfflineNotification(){let n=document.getElementById("offline-notification");n||(n=document.createElement("div"),n.id="offline-notification",n.style.cssText="\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      background: #f44336;\n      color: white;\n      text-align: center;\n      padding: 12px;\n      z-index: 9999;\n      font-size: 14px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    ",n.innerHTML="\n      ðŸ“¡ You're offline. Data will be saved locally and synced when connection is restored.\n    ",document.body.insertBefore(n,document.body.firstChild)),n.style.display="block"}function hideOfflineNotification(){const n=document.getElementById("offline-notification");n&&(n.style.display="none")}function showUpdateNotification(){let n=document.getElementById("update-notification");n||(n=document.createElement("div"),n.id="update-notification",n.style.cssText="\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      background: #4caf50;\n      color: white;\n      padding: 16px 20px;\n      border-radius: 8px;\n      z-index: 9999;\n      font-size: 14px;\n      box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);\n      max-width: 300px;\n    ",n.innerHTML='\n      <div style="margin-bottom: 8px;">\n        ðŸ”„ New version available!\n      </div>\n      <button onclick="window.PWA.updateApp()" style="\n        background: white;\n        color: #4caf50;\n        border: none;\n        padding: 6px 12px;\n        border-radius: 4px;\n        cursor: pointer;\n        margin-right: 8px;\n      ">Update</button>\n      <button onclick="window.PWA.dismissUpdate()" style="\n        background: transparent;\n        color: white;\n        border: 1px solid white;\n        padding: 6px 12px;\n        border-radius: 4px;\n        cursor: pointer;\n      ">Later</button>\n    ',document.body.appendChild(n)),n.style.display="block"}export function updateApp(){"serviceWorker"in navigator&&navigator.serviceWorker.controller&&(navigator.serviceWorker.controller.postMessage({type:"SKIP_WAITING"}),navigator.serviceWorker.addEventListener("controllerchange",()=>{window.location.reload()}))}export function dismissUpdate(){const n=document.getElementById("update-notification");n&&(n.style.display="none")}function showNotification(n,e="info"){const t=document.createElement("div");t.style.cssText=`\n    position: fixed;\n    top: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    background: ${"success"===e?"#4caf50":"error"===e?"#f44336":"#2196f3"};\n    color: white;\n    padding: 12px 20px;\n    border-radius: 8px;\n    z-index: 9999;\n    font-size: 14px;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.2);\n  `,t.textContent=n,document.body.appendChild(t),setTimeout(()=>{t.remove()},3e3)}export function isStandalone(){return window.matchMedia("(display-mode: standalone)").matches||!0===window.navigator.standalone}export function getInstallStatus(){return{isInstalled:isStandalone(),canInstall:!!deferredPrompt,isOnline:isOnline,updateAvailable:updateAvailable}}export function initializePWA(){registerServiceWorker(),initializeInstallPrompt(),initializeOfflineDetection(),window.PWA={updateApp:updateApp,dismissUpdate:dismissUpdate,installApp:installApp,getInstallStatus:getInstallStatus},console.log("[PWA] ThynkTech PWA initialized")}