import{renderProfile,isPasswordExpired,showModal}from"./helpers.js";import{db,saveDb}from"./db.js";import*as exportUtils from"./export.js";import{renderRegisterMgmt}from"./registers.js";import{renderServiceVisitSelector,renderServiceEntry}from"./services.js";import{renderPatientList}from"./patients.js";import{renderVisitLog}from"./visits.js";import{renderReports}from"./reports.js";import{renderAppointmentList}from"./appointments.js";import{wrapWithLayout,setupLogoutButton}from"./layout.js";function isAdminPasswordExpired(){const e=db.users.find(e=>"admin"===e.role?.toLowerCase());if(!e)return!1;const t=e.lastPasswordChange||0;return(Date.now()-t)/864e5>30}function showAdminPasswordChange(e,t=!1){const n=showModal(`\n    <div style="max-width:400px;">\n      <h5>Change Admin Password</h5>\n      ${t?'<div class="alert alert-warning small">Password expired. Please set a new password.</div>':""}\n      <form id="adminPassForm">\n        <div class="mb-3">\n          <label>Current Password</label>\n          <input type="password" class="form-control" name="currentPassword" required>\n        </div>\n        <div class="mb-3">\n          <label>New Password</label>\n          <input type="password" class="form-control" name="newPassword" required>\n        </div>\n        <div class="d-flex justify-content-between">\n          <button type="submit" class="btn btn-primary btn-sm">Save</button>\n          <button type="button" class="btn btn-secondary btn-sm" id="cancelAdminPass">Cancel</button>\n        </div>\n        <div id="adminPassMsg" class="mt-2 small"></div>\n      </form>\n    </div>`,t?null:()=>{});document.getElementById("cancelAdminPass").onclick=()=>{t||n()},document.getElementById("adminPassForm").onsubmit=function(e){e.preventDefault();const t=this.currentPassword.value,s=this.newPassword.value,i=db.users.find(e=>"admin"===e.role?.toLowerCase());if(!i||i.password!==t)return this.querySelector("#adminPassMsg").textContent="Current password is incorrect.",void(this.querySelector("#adminPassMsg").className="text-danger mt-2 small");i.password=s,i.lastPasswordChange=Date.now(),saveDb(),this.querySelector("#adminPassMsg").textContent="Password updated!",this.querySelector("#adminPassMsg").className="text-success mt-2 small",setTimeout(()=>n(),1200)}}export function renderFacilitySetup(e){e.innerHTML='\n    <div class="container my-5">\n      <div class="card shadow-lg">\n        <div class="card-header bg-primary text-white">\n          <h3><i class="bi bi-hospital"></i> Facility Setup</h3>\n        </div>\n        <div class="card-body">\n          <form id="facForm" autocomplete="off">\n            <select class="form-select mb-2" id="regionSelect" required>\n              <option value="">Select Region</option>\n            </select>\n            <select class="form-select mb-2" id="districtSelect" required disabled>\n              <option value="">Select District</option>\n            </select>\n            <select class="form-select mb-2" id="subDistrictSelect" required disabled>\n              <option value="">Select Sub-district</option>\n            </select>\n            <select class="form-select mb-2" id="facilitySelect" required disabled>\n              <option value="">Select Facility</option>\n            </select>\n            <input class="form-control mb-2" id="facilityNameManual" placeholder="Facility Name (if not listed)">\n            <input class="form-control mb-2" id="community"     placeholder="Community"     required>\n            <input class="form-control mb-2" id="latlong"       placeholder="Latitude, Longitude (optional)">\n            <input class="form-control mb-2" type="file" id="facilityImage" accept="image/*">\n            <input class="form-control mb-3" id="facilityContact" placeholder="Contact Info (optional)">\n\n            <hr><h5>Super-Admin Account</h5>\n            <input class="form-control mb-2" id="adminUser" placeholder="Admin Username" required>\n            <input class="form-control mb-3" id="adminPass" type="password" placeholder="Admin Password" required>\n\n            <button class="btn btn-primary w-100"><i class="bi bi-save"></i> Save & Continue</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  ';const t=["data/Ahafo.json","data/Ashanti.json","data/Bono_East.json","data/Bono.json","data/Central.json","data/Eastern.json","data/Greater_Accra.json","data/North_East.json","data/Northern.json","data/Oti.json","data/Savannah.json","data/Upper_East.json","data/Upper_West.json","data/Volta.json","data/Western.json","data/Western_North.json"],n=document.getElementById("regionSelect"),s=t.map(e=>e.split("/").pop().replace(".json","").replace(/_/g," "));s.forEach((e,s)=>{const i=document.createElement("option");i.value=t[s],i.textContent=e,n.appendChild(i)}),n.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}));const i=document.getElementById("districtSelect"),a=document.getElementById("subDistrictSelect"),r=document.getElementById("facilitySelect"),o=document.getElementById("facilityNameManual");function c(e,t){e.innerHTML=`<option value="">Select ${t}</option>`,e.disabled=!0}n.addEventListener("change",async function(){if(c(i,"District"),c(a,"Sub-district"),c(r,"Facility"),o.value="",!n.value||"Other"===n.value)return i.disabled=!0,a.disabled=!0,r.disabled=!0,void(o.disabled=!1);i.disabled=!1;try{const e=await fetch(n.value),t=await e.json();[...new Set(t.map(e=>e.District))].forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e,i.appendChild(t)}),i.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}catch(e){i.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}}),i.addEventListener("change",async function(){if(c(a,"Sub-district"),c(r,"Facility"),o.value="",!i.value||"Other"===i.value||"Other"===n.value)return a.disabled=!0,r.disabled=!0,void(o.disabled=!1);a.disabled=!1;try{const e=await fetch(n.value),t=await e.json();[...new Set(t.filter(e=>e.District===i.value).map(e=>e["Sub-district"]))].forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e,a.appendChild(t)}),a.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}catch(e){a.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}}),a.addEventListener("change",async function(){if(c(r,"Facility"),o.value="",!a.value||"Other"===a.value||"Other"===i.value||"Other"===n.value)return r.disabled=!0,void(o.disabled=!1);r.disabled=!1;try{const e=await fetch(n.value),t=await e.json();t.filter(e=>e.District===i.value&&e["Sub-district"]===a.value).map(e=>e.Facility).forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e,r.appendChild(t)}),r.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}catch(e){r.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}}),r.addEventListener("change",function(){"Other"!==r.value&&r.value?(o.disabled=!0,o.value=""):o.disabled=!1}),o.addEventListener("input",function(){o.value.trim()&&(r.value="")}),document.getElementById("facForm").onsubmit=e=>{e.preventDefault();const n=e.target.facilitySelect.value&&"Other"!==e.target.facilitySelect.value?e.target.facilitySelect.value:e.target.facilityNameManual.value.trim()||e.target.facilityName.value.trim();db.facility={name:n,region:(()=>{if("Other"===e.target.regionSelect.value)return"Other";const n=t.indexOf(e.target.regionSelect.value);return n>=0?s[n]:""})(),district:"Other"===e.target.districtSelect.value?"Other":e.target.districtSelect.value,subDistrict:"Other"===e.target.subDistrictSelect.value?"Other":e.target.subDistrictSelect.value,community:e.target.community.value,latlong:e.target.latlong.value,image:e.target.facilityImage.files[0]?URL.createObjectURL(e.target.facilityImage.files[0]):null,contact:e.target.facilityContact.value},db.users=[{username:e.target.adminUser.value,password:e.target.adminPass.value,role:"Admin",lastPasswordChange:Date.now()}],db.roles=[{name:"Admin",permissions:["all"]}],db.currentUser=db.users[0],saveDb(),window.location.hash="#admin-dashboard"}}export function renderAdminDashboard(e){isPasswordExpired(db.currentUser)&&setTimeout(()=>{alert("Your password is expired. Please update your password."),renderProfile(e,{getUser:()=>db.currentUser,updateUser:e=>{db.currentUser=e,saveDb()},dashboardHash:"#admin-dashboard"})},500);db.facility;setTimeout(()=>{if(db.currentUser&&db.currentUser.lastPasswordChange){(Date.now()-db.currentUser.lastPasswordChange)/864e5>30&&(alert("Your password is expired. Please update your password."),window.location.hash="#profile")}},200),setTimeout(()=>{const t=document.getElementById("adminProfileLink");t&&(t.onclick=t=>{t.preventDefault(),renderProfile(e,{getUser:()=>db.currentUser,updateUser:e=>{db.currentUser=e,saveDb()},dashboardHash:"#admin-dashboard"})});const n=document.getElementById("adminThemePickerBtn"),s=document.getElementById("adminThemeDropdown");if(n&&s){const e=localStorage.getItem("adminTheme")||"blue";i(e),a(e),n.onclick=e=>{e.stopPropagation();const t="block"===s.style.display;s.style.display=t?"none":"block"},s.querySelectorAll(".theme-option").forEach(e=>{e.onclick=t=>{t.stopPropagation();const n=e.dataset.theme;i(n),localStorage.setItem("adminTheme",n),a(n),s.style.display="none"}}),document.addEventListener("click",()=>{s.style.display="none"})}function i(e){document.body.classList.remove("theme-blue","theme-green","theme-purple","theme-orange","theme-teal","theme-gold","theme-gray","theme-dark","theme-mint","theme-coral"),document.body.classList.add(`theme-${e}`)}function a(e){document.querySelectorAll("#adminThemeDropdown .theme-option").forEach(t=>{t.classList.toggle("active",t.dataset.theme===e)})}const r=e.querySelector('a[href="#appointments"]');r&&(r.onclick=t=>{t.preventDefault();let n=document.getElementById("app")||e;renderAppointmentList(n),window.location.hash="#appointments"})},100);const t=`\n  <style>\n    .admin-section {\n      background: rgba(255,255,255,0.9);\n      border-radius: 15px;\n      padding: 2rem;\n      margin: 1rem 0;\n      backdrop-filter: blur(10px);\n      box-shadow: 0 8px 20px rgba(0,0,0,0.1);\n      border: 1px solid rgba(255,255,255,0.2);\n    }\n    .admin-action-btn {\n      display: block;\n      width: 100%;\n      padding: 1rem;\n      margin: 0.5rem 0;\n      background: linear-gradient(45deg, #2196f3, #64b5f6);\n      color: white;\n      text-decoration: none;\n      border-radius: 10px;\n      border: none;\n      font-weight: 500;\n      transition: all 0.3s ease;\n      box-shadow: 0 4px 8px rgba(33, 150, 243, 0.3);\n    }\n    .admin-action-btn:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 6px 12px rgba(33, 150, 243, 0.4);\n      color: white;\n      text-decoration: none;\n    }\n    .export-btn {\n      padding: 0.5rem 1rem;\n      margin: 0.25rem;\n      border-radius: 8px;\n      border: none;\n      font-size: 0.9rem;\n      transition: all 0.3s ease;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    }\n    .export-btn:hover {\n      transform: translateY(-1px);\n      box-shadow: 0 4px 8px rgba(0,0,0,0.3);\n    }\n    .apt-day-label { font-weight: bold; color: #2a2a2a; }\n    .apt-day-list { margin-bottom: 1.2em; }\n  </style>\n  <div class="my-4">\n    <div class="row g-4">\n      <div class="col-12 col-md-6">\n        <div class="admin-section">\n          <h5><i class="bi bi-person-gear me-2"></i> Admin Quick Actions</h5>\n          <a href="#user-mgmt" class="admin-action-btn"><i class="bi bi-people me-2"></i>User Management</a>\n          <a href="#patient-reg" class="admin-action-btn"><i class="bi bi-person-plus me-2"></i>Patient Registration</a>\n          <a href="#visit-log" class="admin-action-btn"><i class="bi bi-journal-text me-2"></i>Visit Logging</a>\n          <a href="#register-mgmt" class="admin-action-btn"><i class="bi bi-journals me-2"></i>Register Management</a>\n          <a href="#appointments" class="admin-action-btn"><i class="bi bi-calendar-event me-2"></i>Appointments</a>\n          <a href="#reports" class="admin-action-btn"><i class="bi bi-bar-chart me-2"></i>Reports</a>\n          ${db.registers?.length?`<a href="#service-entry?reg=${encodeURIComponent(db.registers[0].name)}" class="admin-action-btn"><i class="bi bi-clipboard-plus me-2"></i>Open Service Registers</a>`:""}\n          \n          <div class="border-top pt-3 mt-3">\n            <h6 class="text-muted mb-3"><i class="bi bi-cloud-arrow-down me-1"></i> Export & Backup</h6>\n            <div class="d-flex flex-wrap gap-2">\n              <button class="btn btn-outline-primary export-btn" id="multiExportBtn">\n                <i class="bi bi-download me-1"></i>Export JSON\n              </button>\n              <button class="btn btn-outline-success export-btn" id="csvExportBtn">\n                <i class="bi bi-file-earmark-csv me-1"></i>Export CSV\n              </button>\n              <button class="btn btn-outline-secondary export-btn" id="backupBtn">\n                <i class="bi bi-shield-lock me-1"></i>Backup\n              </button>\n              <button class="btn btn-outline-warning export-btn" onclick="document.getElementById('restoreFile').click()">\n                <i class="bi bi-arrow-clockwise me-1"></i>Restore\n              </button>\n              <input type="file" id="restoreFile" accept=".json" style="display:none;">\n              <button class="btn btn-outline-info export-btn" id="setupExportBtn">\n                <i class="bi bi-cloud-arrow-up me-1"></i>Export Setup\n              </button>\n            </div>\n            <div id="backupMsg" class="mt-2"></div>\n          </div>\n        </div>\n      </div>\n      <div class="col-12 col-md-6">\n        <div class="admin-section">\n          <h5><i class="bi bi-calendar-event me-2"></i> Appointments</h5>\n          <div id="adminAptList"></div>\n        </div>\n      </div>\n    </div>\n    \n    \x3c!-- Multi-Select Export Modal --\x3e\n    <div id="multiExportModal" class="modal-overlay" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5); z-index:1000;">\n      <div class="modal-content mx-auto mt-5" style="max-width:500px; background:white; border-radius:8px; padding:20px;">\n        <h5><i class="bi bi-download me-2"></i>Export Data (JSON)</h5>\n        <p class="text-muted small">Select data types to export for sharing with another device:</p>\n        <div class="form-check mb-2">\n          <input class="form-check-input" type="checkbox" id="exportPatients" checked>\n          <label class="form-check-label" for="exportPatients">Patients (${(db.patients||[]).length} records)</label>\n        </div>\n        <div class="form-check mb-2">\n          <input class="form-check-input" type="checkbox" id="exportVisits" checked>\n          <label class="form-check-label" for="exportVisits">Visits (${(db.visits||[]).length} records)</label>\n        </div>\n        <div class="form-check mb-2">\n          <input class="form-check-input" type="checkbox" id="exportServices">\n          <label class="form-check-label" for="exportServices">Service Entries (${Object.keys(db.serviceEntries||{}).reduce((e,t)=>e+(db.serviceEntries[t]||[]).length,0)} records)</label>\n        </div>\n        <div class="form-check mb-2">\n          <input class="form-check-input" type="checkbox" id="exportAppointments">\n          <label class="form-check-label" for="exportAppointments">Appointments (${(db.appointments||[]).length} records)</label>\n        </div>\n        <div class="form-check mb-3">\n          <input class="form-check-input" type="checkbox" id="exportRegisters">\n          <label class="form-check-label" for="exportRegisters">Registers/Forms (${(db.registers||[]).length} records)</label>\n        </div>\n        <div class="d-flex justify-content-between">\n          <button class="btn btn-primary" id="executeExport"><i class="bi bi-download me-1"></i>Export Selected</button>\n          <button class="btn btn-secondary" id="cancelExport">Cancel</button>\n        </div>\n      </div>\n    </div>\n    \n    \x3c!-- CSV Export Modal --\x3e\n    <div id="csvExportModal" class="modal-overlay" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5); z-index:1000;">\n      <div class="modal-content mx-auto mt-5" style="max-width:500px; background:white; border-radius:8px; padding:20px;">\n        <h5><i class="bi bi-file-earmark-csv me-2"></i>Export CSV (De-identified)</h5>\n        <p class="text-muted small">Export data as CSV files for external use. Personal identifiers will be removed:</p>\n        <div class="form-check mb-2">\n          <input class="form-check-input" type="checkbox" id="csvPatients" checked>\n          <label class="form-check-label" for="csvPatients">Patients (anonymized)</label>\n        </div>\n        <div class="form-check mb-2">\n          <input class="form-check-input" type="checkbox" id="csvVisits" checked>\n          <label class="form-check-label" for="csvVisits">Visits (anonymized)</label>\n        </div>\n        <div class="form-check mb-3">\n          <input class="form-check-input" type="checkbox" id="csvServices">\n          <label class="form-check-label" for="csvServices">Service Entries (anonymized)</label>\n        </div>\n        <div class="d-flex justify-content-between">\n          <button class="btn btn-success" id="executeCsvExport"><i class="bi bi-file-earmark-csv me-1"></i>Export CSV</button>\n          <button class="btn btn-secondary" id="cancelCsvExport">Cancel</button>\n        </div>\n      </div>\n    </div>\n    \n    \x3c!-- Export Setup Modal --\x3e\n    <div id="setupExportModal" class="modal-overlay" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5); z-index:1000;">\n      <div class="modal-content mx-auto mt-5" style="max-width:500px; background:white; border-radius:8px; padding:20px;">\n        <h5><i class="bi bi-cloud-arrow-up me-2"></i>Export Setup Configuration</h5>\n        <p class="text-muted small">Export system configuration including users, registers, and facility settings for deployment to other devices.</p>\n        \n        <div class="mb-3">\n          <label for="setupUsername" class="form-label">Username (optional)</label>\n          <input type="text" class="form-control" id="setupUsername" placeholder="Leave blank to export all users">\n          <div class="form-text">Enter a specific username to export only that user's configuration and assigned registers.</div>\n        </div>\n        \n        <div class="form-check mb-3">\n          <input class="form-check-input" type="checkbox" id="includeFacility" checked>\n          <label class="form-check-label" for="includeFacility">\n            Include facility settings (logo, name, location)\n          </label>\n        </div>\n        \n        <div class="form-check mb-3">\n          <input class="form-check-input" type="checkbox" id="includeRoles" checked>\n          <label class="form-check-label" for="includeRoles">\n            Include user roles and permissions\n          </label>\n        </div>\n        \n        <div class="form-check mb-3">\n          <input class="form-check-input" type="checkbox" id="includeCustomFields" checked>\n          <label class="form-check-label" for="includeCustomFields">\n            Include custom patient fields\n          </label>\n        </div>\n        \n        <div class="d-flex justify-content-between">\n          <button class="btn btn-primary" id="executeSetupExport"><i class="bi bi-cloud-arrow-up me-1"></i>Export Setup</button>\n          <button class="btn btn-secondary" id="cancelSetupExport">Cancel</button>\n        </div>\n      </div>\n    </div>\n    \n  </div>\n  `;e.innerHTML=wrapWithLayout(t,"dashboard",!0,!0),setTimeout(setupLogoutButton,100);const n=e.querySelector("#adminAptList");if(n){const e=new Date,t={};for(let n=0;n<7;n++){const s=new Date(e);s.setDate(e.getDate()+n);const i=s.toISOString().slice(0,10);t[i]=[]}(db.appointments||[]).forEach(e=>{e.appointmentDate&&void 0!==t[e.appointmentDate]&&t[e.appointmentDate].push(e)});let s="";Object.keys(t).forEach(e=>{const n=new Date(e).toLocaleDateString(void 0,{weekday:"long",month:"short",day:"numeric"}),i=t[e];s+=`<div class="apt-day-list">\n        <div class="apt-day-label">${n}</div>`,i.length?s+='<ul class="list-group list-group-flush">'+i.map(e=>{let t=`<span class="badge bg-${"Completed"===e.status?"success":"primary"} ms-2">${e.status}</span>`;const n=new Date(e.appointmentDate),s=new Date;n.setHours(0,0,0,0),s.setHours(0,0,0,0);const i=Math.floor((n-s)/864e5);let a="",r="";return i<0?(a="danger",r="Missed"):i<3?(a="warning",r=0===i?"Today":`${i} day${1===i?"":"s"}`):(a="success",r=`${i} days`),`<li class="list-group-item d-flex align-items-center justify-content-between py-2">\n              <div>\n                <i class="bi bi-person-circle me-1"></i>\n                <b>${e.patientName||e.patientID}</b>\n                <span class="text-muted small ms-2">${e.serviceType||""}</span>\n              </div>\n              <div>\n                <span class="badge bg-${a} me-2">${r}</span>\n                ${t}\n              </div>\n            </li>`}).join("")+"</ul>":s+='<div class="text-muted small">No appointments.</div>',s+="</div>"}),n.innerHTML=s}const s=e.querySelector("#multiExportBtn"),i=e.querySelector("#multiExportModal");s&&(s.onclick=()=>{i.style.display="block"});const a=e.querySelector("#cancelExport");a&&(a.onclick=()=>{i.style.display="none"});const r=e.querySelector("#executeExport");r&&(r.onclick=()=>{const t={};let n="export";if(e.querySelector("#exportPatients").checked&&(t.patients=db.patients||[],n+="_patients"),e.querySelector("#exportVisits").checked&&(t.visits=db.visits||[],n+="_visits"),e.querySelector("#exportServices").checked&&(t.serviceEntries=db.serviceEntries||{},n+="_services"),e.querySelector("#exportAppointments").checked&&(t.appointments=db.appointments||[],n+="_appointments"),e.querySelector("#exportRegisters").checked&&(t.registers=db.registers||[],t.customPatientFields=db.customPatientFields||[],n+="_registers"),0===Object.keys(t).length)return void alert("Please select at least one data type to export.");t.meta={facility:db.facility||{},exported:(new Date).toISOString(),exportType:"multi-select"};const s=exportUtils.encryptData(JSON.stringify(t,null,2)),a=new Blob([s],{type:"application/json"}),r=URL.createObjectURL(a),o=document.createElement("a");o.href=r,o.download=n+".json",document.body.appendChild(o),o.click(),setTimeout(()=>{document.body.removeChild(o),URL.revokeObjectURL(r)},100),i.style.display="none"});const o=e.querySelector("#csvExportBtn"),c=e.querySelector("#csvExportModal");o&&(o.onclick=()=>{c.style.display="block"});const l=e.querySelector("#cancelCsvExport");l&&(l.onclick=()=>{c.style.display="none"});const d=e.querySelector("#executeCsvExport");function m(e){if(!e.length)return"";const t=Object.keys(e[0]);return[t.join(","),...e.map(e=>t.map(t=>{const n=e[t]||"";return`"${String(n).replace(/"/g,'""')}"`}).join(","))].join("\n")}function u(e,t){const n=new Blob([e],{type:"text/csv"}),s=URL.createObjectURL(n),i=document.createElement("a");i.href=s,i.download=t,document.body.appendChild(i),i.click(),setTimeout(()=>{document.body.removeChild(i),URL.revokeObjectURL(s)},100)}d&&(d.onclick=()=>{if(e.querySelector("#csvPatients").checked){u(m((db.patients||[]).map((e,t)=>({id:`PATIENT_${String(t+1).padStart(4,"0")}`,ageGroup:e.age?e.age<18?"Under 18":e.age<65?"18-64":"65+":"",sex:e.sex||"",registrationDate:e.registrationDate||"",region:db.facility?.region||"",district:db.facility?.district||"",facilityType:"Health Facility"}))),"anonymized_patients.csv")}if(e.querySelector("#csvVisits").checked){u(m((e=>{const t={};return(db.patients||[]).forEach((e,n)=>{t[e.patientID]=`PATIENT_${String(n+1).padStart(4,"0")}`}),e.map(e=>({anonymizedPatientId:t[e.patientID]||"UNKNOWN",visitDate:e.date||e.visitDate||"",serviceType:e.service||e.serviceType||"",outcome:e.outcome||"",region:db.facility?.region||"",facility:db.facility?.name||""}))})(db.visits||[])),"anonymized_visits.csv")}if(e.querySelector("#csvServices").checked){const e=[];Object.keys(db.serviceEntries||{}).forEach(t=>{(db.serviceEntries[t]||[]).forEach(n=>{e.push({anonymizedPatientId:`PATIENT_${String(Math.floor(9999*Math.random())+1).padStart(4,"0")}`,serviceType:t,entryDate:n.visitDate||"",region:db.facility?.region||"",facility:db.facility?.name||""})})});u(m(e),"anonymized_services.csv")}c.style.display="none"});const p=e.querySelector("#setupExportBtn"),b=e.querySelector("#setupExportModal");p&&b&&(p.onclick=()=>{b.style.display="block"},e.querySelector("#cancelSetupExport")?.addEventListener("click",()=>{b.style.display="none"}),e.querySelector("#executeSetupExport")?.addEventListener("click",()=>{const t=e.querySelector("#setupUsername").value.trim(),n=e.querySelector("#includeFacility").checked,s=e.querySelector("#includeRoles").checked,i=e.querySelector("#includeCustomFields").checked;let a=db.users||[],r=db.registers||[],o=db.servicesList||[];if(t){const e=db.users?.find(e=>e.username===t);if(!e)return void alert("User not found.");a=[e],Array.isArray(e.assignedRegisters)&&e.assignedRegisters.length?(r=db.registers?.filter(t=>e.assignedRegisters.includes(t.name))||[],o=db.servicesList?.filter(t=>e.assignedRegisters.some(e=>t.registerName===e||t.category===e||t.formType===e))||[]):(r=[],o=[])}const c={users:a,registers:r,servicesList:o,settings:db.settings,exportInfo:{exportDate:(new Date).toISOString(),exportedBy:db.currentUser?.username||"admin",userScope:t||"all_users",assignedRegistersIncluded:t?a[0]?.assignedRegisters||[]:"all"}};n&&(c.facility=db.facility),s&&(c.roles=db.roles),i&&(c.customPatientFields=db.customPatientFields);const l=new Blob([JSON.stringify(c,null,2)],{type:"application/json"}),d=URL.createObjectURL(l),m=document.createElement("a");m.href=d,m.download=t?`setup-${t}.json`:"system-setup.json",m.click(),URL.revokeObjectURL(d),b.style.display="none",e.querySelector("#setupUsername").value="",e.querySelector("#includeFacility").checked=!0,e.querySelector("#includeRoles").checked=!0,e.querySelector("#includeCustomFields").checked=!0}),b.onclick=e=>{e.target===b&&(b.style.display="none")});const h=e.querySelector("#backupBtn");h&&(h.onclick=()=>{const e={...db,timestamp:(new Date).toISOString()},t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),n=URL.createObjectURL(t),s=document.createElement("a");s.href=n,s.download=`backup_${(new Date).toISOString().split("T")[0]}.json`,document.body.appendChild(s),s.click(),setTimeout(()=>{document.body.removeChild(s),URL.revokeObjectURL(n)},100)});const v=e.querySelector("#logoutBtn");v&&(v.onclick=()=>{db.currentUser=null,saveDb(),window.location.hash="#login"});const g=e.querySelector("#restoreFile");g&&g.addEventListener("change",t=>{const n=t.target.files[0];if(!n)return;if(!confirm("Are you sure you want to restore from backup? This will overwrite all current data."))return;const s=new FileReader;s.onload=function(t){try{let n;try{n=exportUtils.decryptData(t.target.result)}catch{n=t.target.result}const s=JSON.parse(n);Object.keys(db).forEach(e=>delete db[e]),Object.assign(db,s),saveDb(),e.querySelector("#backupMsg").innerHTML='<div class="text-success">Restore complete. Please reload the page.</div>'}catch(t){e.querySelector("#backupMsg").innerHTML='<div class="text-danger">Restore failed: Invalid or corrupted encrypted file.</div>'}},s.readAsText(n)});const f=e.querySelector("#chooseShareBtn"),y=e.querySelector("#shareModal");f&&y&&(f.onclick=()=>{y.className="active";const t=`\n        <label class="form-label mt-3">Select Specific Registers (optional)</label>\n        ${(db.registers||[]).map(e=>`\n          <div class="form-check">\n            <input class="form-check-input" type="checkbox" value="${e.name}" id="reg-${e.name}">\n            <label class="form-check-label" for="reg-${e.name}">${e.name}</label>\n          </div>\n        `).join("")}\n      `;y.innerHTML=`\n        <div class="modal-content mx-auto">\n          <h5>Select Data to Export</h5>\n          <form id="shareForm">\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="patients" id="sharePatients" checked>\n              <label class="form-check-label" for="sharePatients">Patients</label>\n            </div>\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="visits" id="shareVisits" checked>\n              <label class="form-check-label" for="shareVisits">Visits</label>\n            </div>\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="services" id="shareServices" checked>\n              <label class="form-check-label" for="shareServices">Service Entries</label>\n            </div>\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="registers" id="shareRegisters" checked>\n              <label class="form-check-label" for="shareRegisters">Service Registers</label>\n            </div>\n            ${t}\n            <div class="d-flex justify-content-between mt-3">\n              <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-check-circle"></i> Export</button>\n              <button type="button" class="btn btn-secondary btn-sm" id="cancelShare"><i class="bi bi-x-circle"></i> Cancel</button>\n            </div>\n          </form>\n        </div>`,document.getElementById("cancelShare").onclick=()=>{y.className="",y.innerHTML=""},document.getElementById("shareForm").onsubmit=t=>{t.preventDefault();const n={};if(document.getElementById("sharePatients").checked&&(n.patients=db.patients||[]),document.getElementById("shareVisits").checked&&(n.visits=db.visits||[]),document.getElementById("shareServices").checked){const e=Array.from(document.querySelectorAll("input[id^=reg-]:checked")).map(e=>e.value);n.services=e.length?(db.services||[]).filter(t=>e.includes(t.formName)):db.services||[]}if(document.getElementById("shareRegisters").checked){const e=Array.from(document.querySelectorAll("input[id^=reg-]:checked")).map(e=>e.value);n.registers=e.length?(db.registers||[]).filter(t=>e.includes(t.name)):db.registers||[]}const s=exportUtils.encryptData(JSON.stringify(n)),i=new Blob([s],{type:"application/json"}),a=URL.createObjectURL(i),r=document.createElement("a");r.href=a,r.download="shared-data.json",document.body.appendChild(r),r.click(),setTimeout(()=>{document.body.removeChild(r),URL.revokeObjectURL(a)},100),e.querySelector("#shareMsg").innerHTML='<div class="text-success">Selected data exported. Share via USB or SD card.</div>',y.className="",y.innerHTML=""}});const x=e.querySelector("#importSharedFile");x&&x.addEventListener("change",t=>{const n=t.target.files[0];if(!n)return;const s=new FileReader;s.onload=function(t){try{let n;try{n=exportUtils.decryptData(t.target.result)}catch{n=t.target.result}const s=JSON.parse(n);let i={patients:0,visits:0,services:0,registers:0};s.patients?.forEach(e=>{db.patients.some(t=>t.id===e.id)||(db.patients.push(e),i.patients++)}),s.visits?.forEach(e=>{db.visits.some(t=>t.id===e.id)||(db.visits.push(e),i.visits++)}),s.services?.forEach(e=>{db.services.some(t=>t.id===e.id)||(db.services.push(e),i.services++)}),s.registers?.forEach(e=>{db.registers.some(t=>t.id&&e.id&&t.id===e.id||t.name&&e.name&&t.name===e.name)||(db.registers.push(e),i.registers++)}),saveDb(),e.querySelector("#shareMsg").innerHTML=`<div class="text-success">\n            Import complete: ${i.patients} patients, ${i.visits} visits, ${i.services} service entries${i.registers?`, ${i.registers} registers`:""} added.\n          </div>`}catch(t){e.querySelector("#shareMsg").innerHTML='<div class="text-danger">Import failed: Invalid or corrupted file.</div>'}},s.readAsText(n)})}export function renderUserManagement(e){function t(){document.getElementById("userBody").innerHTML=db.users.map((e,t)=>`\n      <tr>\n        <td>${e.username}</td><td>${e.role}</td>\n        <td>\n          <button class="btn btn-sm btn-accent me-1" data-i="${t}" data-act="edit"><i class="bi bi-pencil"></i></button>\n          <button class="btn btn-sm btn-danger" data-i="${t}" data-act="del"><i class="bi bi-trash"></i></button>\n        </td>\n      </tr>`).join(""),document.querySelectorAll("[data-act=edit]").forEach(e=>e.onclick=()=>i(db.users[e.dataset.i],e.dataset.i)),document.querySelectorAll("[data-act=del]").forEach(e=>e.onclick=()=>{confirm("Delete user?")&&(db.users.splice(e.dataset.i,1),saveDb(),t())})}function n(){document.getElementById("roleList").innerHTML=db.roles.map((e,t)=>`\n      <li class="list-group-item d-flex justify-content-between align-items-center">\n        <span><b>${e.name}</b> <small class="text-muted">(${e.permissions.join(", ")})</small></span>\n        <div>\n          <button class="btn btn-sm btn-accent me-1" data-i="${t}" data-act="editRole"><i class="bi bi-pencil"></i></button>\n          <button class="btn btn-sm btn-danger" data-i="${t}" data-act="delRole"><i class="bi bi-trash"></i></button>\n        </div>\n      </li>`).join(""),document.querySelectorAll("[data-act=editRole]").forEach(e=>e.onclick=()=>s(db.roles[e.dataset.i],e.dataset.i)),document.querySelectorAll("[data-act=delRole]").forEach(e=>e.onclick=()=>{confirm("Delete role?")&&(db.roles.splice(e.dataset.i,1),saveDb(),n())})}function s(e={},t=null){const s=e.permissions||[],i=`\n      <div>\n        <h5>${e.name?"Edit":"Add"} Role</h5>\n        <form id="rForm" class="mt-2">\n          <input class="form-control mb-2" id="rname" placeholder="Role Name" value="${e.name||""}" required>\n          <label class="form-label">Permissions</label>\n          ${["patient-reg","visit-log","service-entry","reports","all"].map(e=>`\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" id="perm-${e}" value="${e}" ${s.includes(e)?"checked":""}>\n              <label class="form-check-label" for="perm-${e}">${e}</label>\n            </div>`).join("")}\n          <div class="d-flex justify-content-between mt-3">\n            <button class="btn btn-primary">${e.name?"Save":"Add"}</button>\n            <button type="button" class="btn btn-secondary" id="cancelR">Cancel</button>\n          </div>\n        </form>\n      </div>`,a=showModal(i);document.getElementById("cancelR").onclick=()=>a(),document.getElementById("rForm").onsubmit=e=>{e.preventDefault();const s={name:e.target.rname.value.trim(),permissions:Array.from(e.target.querySelectorAll("input[type=checkbox]:checked")).map(e=>e.value)};null!==t?db.roles[t]=s:db.roles.push(s),saveDb(),a(),n()}}function i(e={},n=null){e.assignedRegisters=e.assignedRegisters||[];const s=db.currentUser&&db.currentUser.role&&"admin"===db.currentUser.role.toLowerCase(),i=`\n      <div>\n        <h5>${e.username?"Edit":"Add"} User</h5>\n        <form id="uForm" class="mt-2">\n          <input class="form-control mb-2" id="uname" placeholder="Username" value="${e.username||""}" required>\n          <input class="form-control mb-2" id="upass" type="password" placeholder="${e.username?"New password (optional)":"Password"}" ${e.username?"":"required"}>\n          <select class="form-select mb-3" id="urole" required>\n            <option value="">Role...</option>\n            ${db.roles.map(t=>`<option ${e.role===t.name?"selected":""}>${t.name}</option>`).join("")}\n          </select>\n          <label class="form-label mt-2">Allow Access To:</label>\n          <div class="form-check mb-1">\n            <input class="form-check-input" type="checkbox" id="canPatientReg" ${e.canPatientReg?"checked":""}>\n            <label class="form-check-label" for="canPatientReg">Patient Registration</label>\n          </div>\n          <div class="form-check mb-2">\n            <input class="form-check-input" type="checkbox" id="canVisitLog" ${e.canVisitLog?"checked":""}>\n            <label class="form-check-label" for="canVisitLog">Visit Logging</label>\n          </div>\n          ${s?`\n          <label class="form-label">Assigned Service Forms</label>\n          <select class="form-select mb-3" id="uregisters" multiple>\n            ${db.registers.map(t=>`<option value="${t.name}" ${e.assignedRegisters?.includes(t.name)?"selected":""}>${t.name}</option>`).join("")}\n          </select>\n          `:""}\n          <div class="d-flex justify-content-between">\n            <button class="btn btn-primary">${e.username?"Save":"Add"}</button>\n            <button type="button" class="btn btn-secondary" id="cancelU">Cancel</button>\n          </div>\n        </form>\n      </div>`,a=showModal(i);document.getElementById("cancelU").onclick=()=>a(),document.getElementById("uForm").onsubmit=i=>{i.preventDefault();const r={username:i.target.uname.value.trim(),role:i.target.urole.value,password:i.target.upass.value||e.password,canPatientReg:i.target.canPatientReg.checked,canVisitLog:i.target.canVisitLog.checked,assignedRegisters:s&&i.target.uregisters?Array.from(i.target.uregisters.selectedOptions).map(e=>e.value):[]};null!==n?Object.assign(db.users[n],r):db.users.push(r),saveDb(),a(),t()}}e.innerHTML='\n    <div class="container my-4">\n      <div class="card shadow">\n        <div class="card-header">\n          <h4 class="mb-0"><i class="bi bi-people"></i> User & Role Management</h4>\n        </div>\n        <div class="card-body">\n          <button class="btn btn-primary mb-3" id="addUser"><i class="bi bi-person-plus"></i> Add User</button>\n          <table class="table table-bordered table-sm table-hover align-middle">\n            <thead class="table-light"><tr><th>Username</th><th>Role</th><th>Actions</th></tr></thead>\n            <tbody id="userBody"></tbody>\n          </table>\n          <hr>\n          <h5>Role Management</h5>\n          <button class="btn btn-outline-secondary btn-sm mb-2" id="addRole"><i class="bi bi-plus-circle"></i> Add Role</button>\n          <ul class="list-group mb-3" id="roleList"></ul>\n          <a href="#admin-dashboard" class="btn btn-link mt-3"><i class="bi bi-arrow-left"></i> Back</a>\n        </div>\n      </div>\n    </div>\n  ',t(),n(),document.getElementById("addUser").onclick=()=>i(),document.getElementById("addRole").onclick=()=>s()}export function renderAdminExportBackupPage(e){const t=db.facility||{},n=`\n    <div class="facility-meta mb-3">\n      ${t.image?`<img src="${t.image}" alt="Facility Logo" style="max-height:60px; margin-bottom:8px;"><br>`:""}\n      <span class="fw-bold">${t.name||""}</span>\n      <div class="text-muted small">\n        ${[t.region&&`Region: ${t.region}`,t.district&&`District: ${t.district}`,t.community&&`Community: ${t.community}`,t.contact&&`Contact: ${t.contact}`].filter(Boolean).join(" | ")}\n      </div>\n    </div>\n  `;e.innerHTML=`\n    <style>\n      @media (min-width: 768px) {\n        .dashboard-row-equal {\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .dashboard-row-equal > [class^='col-'] {\n          display: flex;\n          flex-direction: column;\n        }\n        .dashboard-row-equal .card {\n          flex: 1 1 auto;\n          height: 100%;\n          min-height: 350px;\n        }\n      }\n      @media (max-width: 767.98px) {\n        .dashboard-row-equal .card {\n          min-height: unset;\n        }\n      }\n    </style>\n    <div class="container my-4">\n      ${n}\n      <div class="row mt-4 g-3 dashboard-row-equal">\n        <div class="col-12 col-md-6 d-flex">\n          <div class="card shadow mb-4 flex-fill">\n            <div class="card-body d-flex flex-column">\n              <h5><i class="bi bi-cloud-arrow-down"></i> Export & Backup</h5>\n              <div class="list-group mb-3 flex-grow-1">\n                <button class="list-group-item list-group-item-action" id="bulkExportBtn"><i class="bi bi-cloud-arrow-down me-2"></i> Bulk Export (Select Multiple)</button>\n                <button class="list-group-item list-group-item-action" id="exportSingle"><i class="bi bi-file-earmark-pdf me-2"></i> Single Patient (PDF)</button>\n                <button class="list-group-item list-group-item-action" id="exportSetup"><i class="bi bi-cloud-arrow-up me-2"></i> Export Setup</button>\n                <button class="list-group-item list-group-item-action" id="backupBtn"><i class="bi bi-download me-2"></i> Download Full Backup</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="col-12 col-md-6 d-flex">\n          <div class="card shadow mb-4 flex-fill">\n            <div class="card-body d-flex flex-column">\n              <h5><i class="bi bi-upload"></i> Import & Restore</h5>\n              <div class="list-group mb-3 flex-grow-1">\n                <label class="list-group-item list-group-item-action" style="cursor:pointer;">\n                  <i class="bi bi-upload me-2"></i> Bulk Import (Auto-detect Type)\n                  <input type="file" id="bulkImportFile" hidden multiple accept=".json">\n                </label>\n                <label class="list-group-item list-group-item-action" style="cursor:pointer;">\n                  <i class="bi bi-upload me-2"></i> Restore Full Backup\n                  <input type="file" id="restoreFile" hidden accept=".json">\n                </label>\n              </div>\n              <div id="importMsg" class="small mt-2 text-muted"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="text-center mt-4">\n        <a href="#admin-dashboard" id="backToDashboardBtn" class="btn btn-link text-primary" style="font-size:1.1rem;">\n          <i class="bi bi-arrow-left-circle-fill me-1"></i> Back to Dashboard\n        </a>\n      </div>\n    </div>\n  `,e.querySelector("#bulkExportBtn")?.addEventListener("click",()=>{showAdminBulkExportModal()}),e.querySelector("#exportSingle")?.addEventListener("click",()=>{const e=prompt("Enter Patient ID to export:");e&&exportUtils.exportPatientA4(e.trim())}),e.querySelector("#exportSetup")?.addEventListener("click",()=>{const e=prompt("Enter username to export (leave blank to export all users):");let t=db.users,n=db.registers,s=db.servicesList||[];if(e){const i=db.users.find(t=>t.username===e.trim());if(!i)return alert("User not found.");t=[i],Array.isArray(i.assignedRegisters)&&i.assignedRegisters.length?(n=db.registers.filter(e=>i.assignedRegisters.includes(e.name)),s=db.servicesList.filter(e=>i.assignedRegisters.some(t=>e.registerName===t||e.category===t||e.formType===t))):(n=[],s=[])}const i={facility:db.facility,settings:db.settings,users:t,registers:n,roles:db.roles,servicesList:s,customPatientFields:db.customPatientFields,exportInfo:{exportDate:(new Date).toISOString(),exportedBy:db.currentUser?.username||"admin",userScope:e?e.trim():"all_users",assignedRegistersIncluded:e?t[0]?.assignedRegisters||[]:"all"}},a=new Blob([JSON.stringify(i,null,2)],{type:"application/json"}),r=URL.createObjectURL(a),o=document.createElement("a");o.href=r,o.download=e?`setup-${e.trim()}.json`:"system-setup.json",o.click(),URL.revokeObjectURL(r)}),e.querySelector("#backupBtn")?.addEventListener("click",()=>{const e=exportUtils.encryptData(JSON.stringify(db)),t=new Blob([e],{type:"application/json"}),n=URL.createObjectURL(t),s=document.createElement("a");s.href=n,s.download=`thynktech-backup-${(new Date).toISOString().slice(0,10)}.json`,document.body.appendChild(s),s.click(),setTimeout(()=>{document.body.removeChild(s),URL.revokeObjectURL(n)},100)}),e.querySelector("#backToDashboardBtn")?.addEventListener("click",e=>{e.preventDefault(),window.location.hash="#admin-dashboard"}),e.querySelector("#bulkImportFile")?.addEventListener("change",t=>{const n=t.target.files;n&&0!==n.length&&processAdminBulkImport(n,e)});const s=new FileReader;s.onload=function(t){try{let n;try{n=JSON.parse(t.target.result)}catch{try{const e=exportUtils.decryptData(t.target.result);n=JSON.parse(e)}catch{try{const e=atob(t.target.result);n=JSON.parse(e)}catch{throw new Error("Invalid file format. Please ensure you are importing a valid export file.")}}}let s=0;(n.visits||[]).forEach(e=>{db.visits.some(t=>t.visitID===e.visitID||t.id&&e.id&&t.id===e.id)||(db.visits.push(e),s++)}),saveDb(),e.querySelector("#importMsg").textContent=`Successfully imported ${s} visits.`,e.querySelector("#importMsg").className="small mt-2 text-success"}catch(t){e.querySelector("#importMsg").textContent=`Import failed: ${t.message}`,e.querySelector("#importMsg").className="small mt-2 text-danger"}},s.readAsText(file)}