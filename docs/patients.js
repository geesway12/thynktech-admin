import{db,saveDb}from"./db.js";import{generatePatientID}from"./idUtils.js";import{calculateAge,formatDate}from"./utils.js";import{createVisitForm}from"./visits.js";import{renderServiceEntryForm}from"./services.js";import{renderAppointmentForm}from"./appointments.js";const fieldTypes=[{value:"text",label:"Text"},{value:"integer",label:"Integer"},{value:"decimal",label:"Decimal"},{value:"select_one",label:"Single Select (select_one)"},{value:"select_multiple",label:"Multiple Select (select_multiple)"},{value:"date",label:"Date"},{value:"time",label:"Time"},{value:"datetime",label:"DateTime"},{value:"note",label:"Note/Label"},{value:"calculate",label:"Calculation"},{value:"image",label:"Image"},{value:"audio",label:"Audio"},{value:"video",label:"Video"},{value:"file",label:"File Upload"},{value:"barcode",label:"Barcode"},{value:"qr_code",label:"QR Code"},{value:"geopoint",label:"Geopoint"},{value:"geotrace",label:"Geotrace"},{value:"geoshape",label:"Geoshape"}];export function renderPatientList(e){function t(e={}){let a=db.patients||[];e.id&&(a=a.filter(t=>t.patientID?.includes(e.id))),e.name&&(a=a.filter(t=>t.name?.toLowerCase().includes(e.name.toLowerCase()))),e.phone&&(a=a.filter(t=>t.phone?.includes(e.phone))),document.getElementById("listBody").innerHTML=0===a.length?'<tr><td colspan="9" class="text-center text-muted">No patients found.</td></tr>':a.map((e,t)=>`\n      <tr>\n        <td data-label="ID">${e.patientID||""}</td>\n        <td data-label="Name">${e.name||""}</td>\n        <td class="d-none d-md-table-cell" data-label="Reg Date">${formatDate(e.registrationDate)||""}</td>\n        <td class="d-none d-md-table-cell" data-label="DOB">${formatDate(e.dob)||""}</td>\n        <td class="d-none d-md-table-cell" data-label="Age">${e.age??""}</td>\n        <td class="d-none d-md-table-cell" data-label="Sex">${e.sex||""}</td>\n        <td class="d-none d-md-table-cell" data-label="Phone">${e.phone||""}</td>\n        <td class="d-none d-md-table-cell" data-label="Family">${e.familyId||""}</td>\n        <td data-label="Actions">\n          <button class="btn btn-sm btn-primary me-1" data-i="${t}" data-act="view" title="View/Edit"><i class="bi bi-eye"></i></button>\n          <button class="btn btn-sm btn-danger me-1" data-i="${t}" data-act="del" title="Delete"><i class="bi bi-trash"></i></button>\n          <button class="btn btn-sm btn-outline-success me-1" data-i="${t}" data-act="visit" title="Log Visit"><i class="bi bi-journal-plus"></i></button>\n          <button class="btn btn-sm btn-outline-secondary me-1" data-i="${t}" data-act="service" title="Service Entry"><i class="bi bi-ui-checks-grid"></i></button>\n          <button class="btn btn-sm btn-outline-primary" data-i="${t}" data-act="appoint" title="Book Appointment"><i class="bi bi-calendar-plus"></i></button>\n        </td>\n      </tr>\n      <tr class="visit-form-row d-none" data-form-i="${t}">\n        <td colspan="9"><div class="visit-form-container"></div></td>\n      </tr>`).join(""),document.querySelectorAll("[data-act=view]").forEach(e=>e.onclick=()=>n(a[e.dataset.i])),document.querySelectorAll("[data-act=del]").forEach(e=>e.onclick=()=>{confirm("Delete this patient?")&&(db.patients.splice(e.dataset.i,1),saveDb(),t())}),document.querySelectorAll("[data-act=visit]").forEach(e=>e.onclick=()=>{const t=e.dataset.i,n=a[t],l=document.querySelector(`.visit-form-row[data-form-i="${t}"]`),i=l.querySelector(".visit-form-container"),o=!l.classList.contains("d-none");document.querySelectorAll(".visit-form-row").forEach(e=>e.classList.add("d-none")),o||(i.innerHTML="",i.appendChild(createVisitForm(n,()=>{setTimeout(()=>l.classList.add("d-none"),2e3)})),l.classList.remove("d-none"))}),document.querySelectorAll("[data-act=service]").forEach(e=>e.onclick=()=>{const t=e.dataset.i,n=a[t];renderServiceEntryForm(n,db.registers||[])}),document.querySelectorAll("[data-act=appoint]").forEach(e=>e.onclick=()=>{const t=e.dataset.i,n=a[t];renderAppointmentForm(n)})}function n(e={}){const n=(new Date).toISOString().slice(0,10),a=document.getElementById("modalWrap");a.innerHTML=`\n      <div class="modal-content mx-auto">\n        <h5>${e.patientID?"Edit":"New"} Patient</h5>\n        <form id="pForm" class="mt-2">\n          <label class="form-label mb-0">Date of Registration</label>\n          <input  type="date" id="dor" class="form-control mb-2"\n                  value="${e.registrationDate||n}" max="${n}" required>\n\n          <label class="form-label mb-0">Date of Birth</label>\n          <input  type="date" id="dob" class="form-control" value="${e.dob||""}" max="${n}">\n          <small id="ageLive" class="text-muted mb-2 d-block"></small>\n\n          <input  id="name"  class="form-control mb-2" placeholder="Full Name" required value="${e.name||""}">\n\n          <select id="sex" class="form-select mb-2" required>\n            <option value="">Sex</option>\n            <option value="M"${"M"===e.sex?" selected":""}>Male</option>\n            <option value="F"${"F"===e.sex?" selected":""}>Female</option>\n            <option value="O"${"O"===e.sex?" selected":""}>Other</option>\n          </select>\n\n          <input id="phone" class="form-control mb-2" placeholder="Phone 024-xxx-xxxx" value="${e.phone||""}">\n          <input id="address" class="form-control mb-2" placeholder="Address" value="${e.address||""}">\n\n          <select id="idType" class="form-select mb-2">\n            <option value="">ID Type (optional)</option>\n            <option value="NIN"${"NIN"===e.idType?" selected":""}>National ID</option>\n            <option value="DL" ${"DL"===e.idType?" selected":""}>Driver's License</option>\n            <option value="VOT"${"VOT"===e.idType?" selected":""}>Voter's Card</option>\n          </select>\n          <input id="idNumber" class="form-control mb-3" placeholder="ID Number" value="${e.idNumber||""}">\n\n          ${(db.customPatientFields||[]).map(t=>renderCustomField(t,e)).join("")}\n\n          <div class="mb-3">\n            <button type="button" class="btn btn-sm btn-success" id="addFieldBtn"><i class="bi bi-plus"></i> Add Custom Field</button>\n            <ul class="list-group mt-2" id="customFieldList">\n              ${(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join("")}\n            </ul>\n          </div>\n\n          <div class="d-flex justify-content-between">\n            <button class="btn btn-primary">${e.patientID?"Save":"Add"}</button>\n            <button type="button" class="btn btn-secondary" id="cancelF">Cancel</button>\n          </div>\n        </form>\n      </div>`,a.className="active",a.onclick=e=>{e.target===a&&close()},document.getElementById("cancelF").onclick=close;const l=document.getElementById("pForm"),i=l.dob,o=l.querySelector("#ageLive"),s=()=>o.textContent=i.value?`Age: ${calculateAge(i.value)}`:"";i.addEventListener("input",s),s(),db.customPatientFields||(db.customPatientFields=[]),document.getElementById("addFieldBtn").onclick=()=>showFieldFormPatient(),l.onsubmit=n=>{n.preventDefault();const a=e.patientID?e:{};if(a.registrationDate=l.dor.value,a.dob=l.dob.value,a.name=l.name.value.trim(),a.sex=l.sex.value,a.phone=l.phone.value.trim(),a.address=l.address.value.trim(),a.idType=l.idType.value,a.idNumber=l.idNumber.value.trim(),a.age=a.dob?calculateAge(a.dob):"",a.customFields=a.customFields||{},(db.customPatientFields||[]).forEach(e=>{const t=document.getElementById(`custom_${e.name}`);t&&(a.customFields[e.name]=t.value)}),a.patientID||(a.patientID=generatePatientID(l.dor.value)),e.patientID){const e=db.patients.findIndex(e=>e.patientID===a.patientID);-1!==e&&(db.patients[e]=a)}else db.patients.push(a);saveDb(),close(),t()}}function a(){document.querySelectorAll(".editFieldBtn").forEach(e=>e.onclick=()=>showFieldFormPatient(db.customPatientFields[e.dataset.fidx],e.dataset.fidx)),document.querySelectorAll(".deleteFieldBtn").forEach(e=>e.onclick=()=>{confirm("Delete this field? Data already captured for this field will be kept in old records.")&&(db.customPatientFields.splice(e.dataset.fidx,1),saveDb(),l())}),document.querySelectorAll(".moveUpBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t>0&&([db.customPatientFields[t-1],db.customPatientFields[t]]=[db.customPatientFields[t],db.customPatientFields[t-1]],saveDb(),l())}),document.querySelectorAll(".moveDownBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t<db.customPatientFields.length-1&&([db.customPatientFields[t],db.customPatientFields[t+1]]=[db.customPatientFields[t+1],db.customPatientFields[t]],saveDb(),l())})}function l(){document.querySelector("#customFieldList").innerHTML=(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join(""),a()}e.innerHTML='\n    <div class="container my-4">\n      <div class="d-flex justify-content-between align-items-center">\n        <h4><i class="bi bi-people"></i> Patients</h4>\n      </div>\n      \x3c!-- Forms above table --\x3e\n      <div class="mb-3 d-flex gap-2">\n        <button class="btn btn-success" type="button" id="addBtn"><i class="bi bi-person-plus"></i> New Patient</button>\n        <a href="#export-backup" class="btn btn-outline-secondary" title="Export/Backup"><i class="bi bi-cloud-arrow-down"></i> Export/Backup</a>\n      </div>\n      <form id="searchForm" class="row g-2 mb-3">\n        <div class="col-md-2"><input name="id"    class="form-control" placeholder="ID"></div>\n        <div class="col-md-3"><input name="name"  class="form-control" placeholder="Name"></div>\n        <div class="col-md-2"><input name="phone" class="form-control" placeholder="Phone 024-xxx-xxxx"></div>\n        <div class="col-md-2"><button class="btn btn-primary w-100"><i class="bi bi-search"></i> Search</button></div>\n      </form>\n      <div id="modalWrap"></div>\n      \x3c!-- Table list --\x3e\n      <div class="table-responsive">\n        <table class="table table-bordered table-hover align-middle patient-table-mobile">\n          <thead class="table-light">\n            <tr>\n              <th>ID</th><th>Name</th><th class="d-none d-md-table-cell">Reg&nbsp;Date</th><th class="d-none d-md-table-cell">DOB</th><th class="d-none d-md-table-cell">Age</th>\n              <th class="d-none d-md-table-cell">Sex</th><th class="d-none d-md-table-cell">Phone</th><th class="d-none d-md-table-cell">Family</th><th>Actions</th>\n            </tr>\n          </thead>\n          <tbody id="listBody"></tbody>\n        </table>\n      </div>\n      <style>\n      /* Mobile-friendly patient table improvements */\n      @media (max-width: 768px) {\n        .patient-table-mobile thead { display: none; }\n        .patient-table-mobile tr { display: block; margin-bottom: 1rem; border: 1px solid #dee2e6; border-radius: 8px; }\n        .patient-table-mobile td { display: flex; justify-content: space-between; align-items: center; padding: 0.5rem 1rem; border: none; border-bottom: 1px solid #eee; }\n        .patient-table-mobile td:last-child { border-bottom: none; }\n        .patient-table-mobile td:before {\n          content: attr(data-label);\n          font-weight: bold;\n          flex: 0 0 40%;\n          color: #555;\n        }\n        .patient-table-mobile td { flex-direction: row; }\n        .patient-table-mobile td:not(:nth-child(1)):not(:nth-child(2)):not(:last-child) { display: none !important; }\n      }\n      </style>\n      <a href="#admin-dashboard" class="btn btn-link mt-2"><i class="bi bi-arrow-left"></i> Back</a>\n    </div>\n  ',t(),document.getElementById("addBtn").onclick=()=>n(),document.getElementById("searchForm").onsubmit=e=>{e.preventDefault(),t(Object.fromEntries(new FormData(e.target)))},a(),(db.customPatientFields||[]).forEach(e=>{if("select_multiple"===e.type){const t=document.querySelectorAll(`input[id^="custom_${e.name}_"]`),n=document.getElementById(`custom_${e.name}`);t.length>0&&n&&t.forEach(e=>{e.addEventListener("change",()=>{const e=Array.from(t).filter(e=>e.checked).map(e=>e.value);n.value=e.join(", ")})})}})}function close(){document.getElementById("modalWrap").className="",document.getElementById("modalWrap").innerHTML=""}function renderCustomField(e,t){const n=t.customFields&&t.customFields[e.name]||"",a=`custom_${e.name}`;switch(e.type){case"text":default:return`<input id="${a}" class="form-control mb-2" placeholder="${e.label||e.name}" value="${n}">`;case"integer":return`<input id="${a}" type="number" step="1" class="form-control mb-2" placeholder="${e.label||e.name}" value="${n}">`;case"decimal":return`<input id="${a}" type="number" step="any" class="form-control mb-2" placeholder="${e.label||e.name}" value="${n}">`;case"date":return`<input id="${a}" type="date" class="form-control mb-2" value="${n}">`;case"select_one":{let t=e.choices;return"string"==typeof t&&(t=t.split(",").map(e=>e.trim()).filter(Boolean)),Array.isArray(t)||(t=[]),`<select id="${a}" class="form-select mb-2"><option value="">${e.label||e.name}</option>`+t.map(e=>`<option value="${e}"${n===e?" selected":""}>${e}</option>`).join("")+"</select>"}case"select_multiple":{let t=e.choices;return"string"==typeof t&&(t=t.split(",").map(e=>e.trim()).filter(Boolean)),Array.isArray(t)||(t=[]),'<div class="mb-2">'+t.map((e,t)=>{const l=n.split(",").map(e=>e.trim()).includes(e)?"checked":"";return`<div class="form-check form-check-inline">\n              <input class="form-check-input" type="checkbox" id="${a}_${t}" value="${e}" ${l}>\n              <label class="form-check-label" for="${a}_${t}">${e}</label>\n            </div>`}).join("")+`<input type="hidden" id="${a}" value="${n}"></div>`}case"note":return`<div class="alert alert-secondary mb-2">${e.label||e.name}</div>`}}function renderFieldRow(e,t){return`<li class="list-group-item d-flex justify-content-between align-items-center">\n      <span><b>${e.label||e.name}</b> <small class="text-muted">(${e.type})</small></span>\n      <span>\n        <button type="button" class="btn btn-sm btn-outline-primary editFieldBtn" data-fidx="${t}"><i class="bi bi-pencil"></i></button>\n        <button type="button" class="btn btn-sm btn-outline-danger deleteFieldBtn" data-fidx="${t}"><i class="bi bi-trash"></i></button>\n        <button type="button" class="btn btn-sm btn-outline-secondary moveUpBtn" data-fidx="${t}"><i class="bi bi-arrow-up"></i></button>\n        <button type="button" class="btn btn-sm btn-outline-secondary moveDownBtn" data-fidx="${t}"><i class="bi bi-arrow-down"></i></button>\n      </span>\n    </li>`}