import{db,saveDb}from"./db.js";import{generatePatientID}from"./idUtils.js";import{calculateAge,formatDate}from"./utils.js";import{createVisitForm}from"./visits.js";import{renderServiceEntryForm}from"./services.js";import{renderAppointmentForm}from"./appointments.js";const fieldTypes=[{value:"text",label:"Text"},{value:"integer",label:"Integer"},{value:"decimal",label:"Decimal"},{value:"select_one",label:"Single Select (select_one)"},{value:"select_multiple",label:"Multiple Select (select_multiple)"},{value:"date",label:"Date"},{value:"time",label:"Time"},{value:"datetime",label:"DateTime"},{value:"note",label:"Note/Label"},{value:"calculate",label:"Calculation"},{value:"image",label:"Image"},{value:"audio",label:"Audio"},{value:"video",label:"Video"},{value:"file",label:"File Upload"},{value:"barcode",label:"Barcode"},{value:"qr_code",label:"QR Code"},{value:"geopoint",label:"Geopoint"},{value:"geotrace",label:"Geotrace"},{value:"geoshape",label:"Geoshape"}];export function renderPatientList(e){if(!document.getElementById("modalWrap")){const e=document.createElement("div");e.id="modalWrap",document.body.appendChild(e)}function t(e={},n=!1){let i=db.patients||[];if(i=i.slice().sort((e,t)=>new Date(t.registrationDate||t.timestamp||0)-new Date(e.registrationDate||e.timestamp||0)),e.id&&(i=i.filter(t=>t.patientID?.includes(e.id))),e.name&&(i=i.filter(t=>t.name?.toLowerCase().includes(e.name.toLowerCase()))),e.phone&&(i=i.filter(t=>t.phone?.includes(e.phone))),document.getElementById("listBody").innerHTML=0===i.length?'<tr><td colspan="3" class="text-center text-muted">No patients found.</td></tr>':i.map((t,n)=>`\n      <tr id="row-${t.patientID}"${e.id&&t.patientID?.toLowerCase().includes(e.id.toLowerCase())?' class="table-info"':""}>\n        <td data-label="ID">${t.patientID||""}</td>\n        <td data-label="Name">${t.name||""}</td>\n        <td data-label="Actions">\n          <button class="btn btn-sm btn-primary me-1" data-i="${n}" data-act="view" title="View/Edit"><i class="bi bi-eye"></i></button>\n        </td>\n      </tr>`).join(""),n&&e.id){const t=document.getElementById("row-"+e.id);t&&(t.scrollIntoView({behavior:"smooth",block:"center"}),t.classList.add("table-success"),setTimeout(()=>t.classList.remove("table-success"),2e3))}document.querySelectorAll("[data-act=view]").forEach(e=>e.onclick=()=>function(e={}){const n=(new Date).toISOString().slice(0,10),i=document.getElementById("modalWrap");i.innerHTML=`\n      <div class="modal-content mx-auto">\n        <h5>${e.patientID?"Edit":"New"} Patient</h5>\n        <form id="pForm" class="mt-2">\n          <label class="form-label mb-0">Date of Registration</label>\n          <input  type="date" id="dor" class="form-control mb-2"\n                  value="${e.registrationDate||n}" max="${n}" required>\n\n          <label class="form-label mb-0">Date of Birth</label>\n          <input  type="date" id="dob" class="form-control" value="${e.dob||""}" max="${n}">\n          <small id="ageLive" class="text-muted mb-2 d-block"></small>\n\n          <input  id="name"  class="form-control mb-2" placeholder="Full Name" required value="${e.name||""}">\n\n          <select id="sex" class="form-select mb-2" required>\n            <option value="">Sex</option>\n            <option value="M"${"M"===e.sex?" selected":""}>Male</option>\n            <option value="F"${"F"===e.sex?" selected":""}>Female</option>\n            <option value="O"${"O"===e.sex?" selected":""}>Other</option>\n          </select>\n\n          <input id="phone" class="form-control mb-2" placeholder="Phone 024-xxx-xxxx" value="${e.phone||""}">\n          <input id="address" class="form-control mb-2" placeholder="Address" value="${e.address||""}">\n\n          <select id="idType" class="form-select mb-2">\n            <option value="">ID Type (optional)</option>\n            <option value="NIN"${"NIN"===e.idType?" selected":""}>National ID</option>\n            <option value="DL" ${"DL"===e.idType?" selected":""}>Driver's License</option>\n            <option value="VOT"${"VOT"===e.idType?" selected":""}>Voter's Card</option>\n          </select>\n          <input id="idNumber" class="form-control mb-3" placeholder="ID Number" value="${e.idNumber||""}">\n\n          ${(db.customPatientFields||[]).map(t=>renderCustomField(t,e)).join("")}\n\n          <div class="mb-3">\n            <button type="button" class="btn btn-sm btn-success" id="addFieldBtn"><i class="bi bi-plus"></i> Add Field</button>\n            <ul class="list-group mt-2" id="customFieldList">\n              ${(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join("")}\n            </ul>\n          </div>\n\n          <div class="d-flex justify-content-between">\n            <button class="btn btn-primary">${e.patientID?"Save":"Add"}</button>\n            <button type="button" class="btn btn-secondary" id="cancelF">Cancel</button>\n          </div>\n        </form>\n      </div>\n    `,i.className="active",i.onclick=e=>{e.target===i&&close()},document.getElementById("cancelF").onclick=close,db.customPatientFields||(db.customPatientFields=[]);document.getElementById("addFieldBtn").onclick=()=>{window.showFieldFormPatient()},a.onsubmit=n=>{n.preventDefault();const l=e.patientID?e:{};if(l.registrationDate=a.dor.value,l.dob=a.dob.value,l.name=a.name.value.trim(),l.sex=a.sex.value,l.phone=a.phone.value.trim(),l.address=a.address.value.trim(),l.idType=a.idType.value,l.idNumber=a.idNumber.value.trim(),l.age=l.dob?calculateAge(l.dob):"",l.customFields=l.customFields||{},(db.customPatientFields||[]).forEach(e=>{const t=document.getElementById(`custom_${e.name}`);t&&(l.customFields[e.name]=t.value)}),l.patientID||(l.patientID=generatePatientID(a.dor.value)),e.patientID){const e=db.patients.findIndex(e=>e.patientID===l.patientID);-1!==e&&(db.patients[e]=l)}else db.patients.push(l);saveDb(),close(),t()},window.showFieldFormPatient=function(e={name:"",type:"text",required:!1},t=null){const n=document.createElement("div");n.className="modal-overlay",n.innerHTML=`\n        <div class="modal-content mx-auto" style="max-width:400px;">\n          <h6>${null!==t?"Edit Field":"Add Field"}</h6>\n          <form id="fieldForm">\n            <div class="mb-2"><input class="form-control" id="fieldName" placeholder="Field Name" required value="${e.name||""}"></div>\n            <div class="mb-2">\n              <select class="form-select" id="fieldType" required>\n                ${fieldTypes.map(t=>`<option value="${t.value}"${e.type===t.value?" selected":""}>${t.label}</option>`).join("")}\n              </select>\n            </div>\n            <div class="mb-2 form-check">\n              <input class="form-check-input" type="checkbox" id="fieldReq" ${e.required?"checked":""}>\n              <label class="form-check-label" for="fieldReq">Required</label>\n            </div>\n            <div class="mb-2"><input class="form-control" id="fieldDefault" placeholder="Default Value" value="${e.default||""}"></div>\n            <div class="mb-2"><input class="form-control" id="fieldConstraint" placeholder="Constraint/Validation (e.g. min=0,max=100)" value="${e.constraint||""}"></div>\n            <div class="mb-2" id="choicesRow" style="display:${["select_one","select_multiple"].includes(e.type)?"block":"none"}">\n              <input class="form-control" id="fieldChoices" placeholder="Choices (comma-separated, e.g. Yes,No,Unknown)" value="${e.choices||""}" ${["select_one","select_multiple"].includes(e.type)?"required":""}>\n            </div>\n            <div class="mb-2" id="calcRow" style="display:${"calculate"===e.type?"block":"none"}">\n              <input class="form-control" id="fieldCalc" placeholder="Calculation Formula (e.g. today() - dob)" value="${e.calc||""}">\n            </div>\n            <div class="mb-2 d-flex justify-content-between">\n              <button class="btn btn-primary">${null!==t?"Save":"Add"}</button>\n              <button type="button" class="btn btn-secondary" id="cancelFieldBtn">Cancel</button>\n            </div>\n          </form>\n        </div>\n      `,document.body.appendChild(n),n.onclick=e=>{e.target===n&&document.body.removeChild(n)},n.querySelector("#cancelFieldBtn").onclick=()=>document.body.removeChild(n),n.querySelector("#fieldType").onchange=function(){const e=["select_one","select_multiple"].includes(this.value);n.querySelector("#choicesRow").style.display=e?"block":"none",n.querySelector("#fieldChoices").required=e,n.querySelector("#calcRow").style.display="calculate"===this.value?"block":"none"},n.querySelector("#fieldForm").onsubmit=function(e){e.preventDefault();let i={name:this.fieldName.value,type:this.fieldType.value,required:this.fieldReq.checked,default:this.fieldDefault.value,constraint:this.fieldConstraint.value};if(["select_one","select_multiple"].includes(i.type)&&(i.choices=this.fieldChoices.value),"calculate"===i.type&&(i.calc=this.fieldCalc.value),null!==t?db.customPatientFields[t]=i:db.customPatientFields.push(i),saveDb(),document.body.removeChild(n),document.getElementById("customFieldList")){const e=new Event("refreshCustomFields");document.getElementById("customFieldList").dispatchEvent(e)}l()};const i=document.getElementById("customFieldList");i&&i.addEventListener("refreshCustomFields",l)};const a=document.getElementById("pForm"),o=a.dob,s=a.querySelector("#ageLive"),d=()=>s.textContent=o.value?`Age: ${calculateAge(o.value)}`:"";o.addEventListener("input",d),d(),db.customPatientFields||(db.customPatientFields=[]);document.getElementById("addFieldBtn")&&(document.getElementById("addFieldBtn").onclick=e=>{e.preventDefault(),"function"==typeof showFieldFormPatient?showFieldFormPatient():window.showFieldFormPatient&&window.showFieldFormPatient()});a.onsubmit=n=>{n.preventDefault();const l=e.patientID?e:{};if(l.registrationDate=a.dor.value,l.dob=a.dob.value,l.name=a.name.value.trim(),l.sex=a.sex.value,l.phone=a.phone.value.trim(),l.address=a.address.value.trim(),l.idType=a.idType.value,l.idNumber=a.idNumber.value.trim(),l.age=l.dob?calculateAge(l.dob):"",l.customFields=l.customFields||{},(db.customPatientFields||[]).forEach(e=>{const t=document.getElementById(`custom_${e.name}`);t&&(l.customFields[e.name]=t.value)}),l.patientID||(l.patientID=generatePatientID(a.dor.value)),e.patientID){const e=db.patients.findIndex(e=>e.patientID===l.patientID);-1!==e&&(db.patients[e]=l)}else db.patients.push(l);saveDb(),close(),t()}}(i[e.dataset.i])),document.querySelectorAll("[data-act=del]").forEach(e=>e.onclick=()=>{confirm("Delete this patient?")&&(db.patients.splice(e.dataset.i,1),saveDb(),t())}),document.querySelectorAll("[data-act=visit]").forEach(e=>e.onclick=()=>{const t=e.dataset.i,n=i[t],l=document.querySelector(`.visit-form-row[data-form-i="${t}"]`),a=l.querySelector(".visit-form-container"),o=!l.classList.contains("d-none");document.querySelectorAll(".visit-form-row").forEach(e=>e.classList.add("d-none")),o||(a.innerHTML="",a.appendChild(createVisitForm(n,()=>{setTimeout(()=>l.classList.add("d-none"),2e3)})),l.classList.remove("d-none"))}),document.querySelectorAll("[data-act=service]").forEach(e=>e.onclick=()=>{const t=e.dataset.i,n=i[t];renderServiceEntryForm(n,db.registers||[])}),document.querySelectorAll("[data-act=appoint]").forEach(e=>e.onclick=()=>{const t=e.dataset.i,n=i[t];renderAppointmentForm(n)})}function n(){document.querySelectorAll(".editFieldBtn").forEach(e=>e.onclick=()=>showFieldFormPatient(db.customPatientFields[e.dataset.fidx],e.dataset.fidx)),document.querySelectorAll(".deleteFieldBtn").forEach(e=>e.onclick=()=>{confirm("Delete this field? Data already captured for this field will be kept in old records.")&&(db.customPatientFields.splice(e.dataset.fidx,1),saveDb(),l())}),document.querySelectorAll(".moveUpBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t>0&&([db.customPatientFields[t-1],db.customPatientFields[t]]=[db.customPatientFields[t],db.customPatientFields[t-1]],saveDb(),l())}),document.querySelectorAll(".moveDownBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t<db.customPatientFields.length-1&&([db.customPatientFields[t],db.customPatientFields[t+1]]=[db.customPatientFields[t+1],db.customPatientFields[t]],saveDb(),l())})}function l(){document.querySelector("#customFieldList").innerHTML=(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join(""),n()}e.innerHTML='\n    <div class="container my-4">\n      <div class="d-flex justify-content-between align-items-center mb-2">\n        <h4><i class="bi bi-people"></i> Patients</h4>\n        <button id="showPatientFormBtn" class="btn btn-success btn-sm"><i class="bi bi-person-plus"></i> Add New Patient</button>\n      </div>\n      <form id="searchForm" class="d-flex gap-2 mb-3">\n        <input name="id"    class="form-control form-control-sm" placeholder="ID">\n        <input name="name"  class="form-control form-control-sm" placeholder="Name">\n        <input name="phone" class="form-control form-control-sm" placeholder="Phone">\n        <button class="btn btn-primary btn-sm"><i class="bi bi-search"></i></button>\n      </form>\n      <div id="formAboveList" style="display:none"></div>\n      <div class="table-responsive" id="patientTableWrap">\n        <table class="table table-bordered table-hover align-middle patient-table-mobile">\n          <thead class="table-light">\n            <tr>\n              <th>ID</th><th>Name</th><th>Actions</th>\n            </tr>\n          </thead>\n          <tbody id="listBody"></tbody>\n        </table>\n      </div>\n      <style>\n      @media (max-width: 768px) {\n        .patient-table-mobile thead { display: none; }\n        .patient-table-mobile tr { display: block; margin-bottom: 1rem; border: 1px solid #dee2e6; border-radius: 8px; }\n        .patient-table-mobile td { display: flex; justify-content: space-between; align-items: center; padding: 0.5rem 1rem; border: none; border-bottom: 1px solid #eee; }\n        .patient-table-mobile td:last-child { border-bottom: none; }\n        .patient-table-mobile td:before {\n          content: attr(data-label);\n          font-weight: bold;\n          flex: 0 0 40%;\n          color: #555;\n        }\n        .patient-table-mobile td { flex-direction: row; }\n      }\n      </style>\n      <a href="#admin-dashboard" class="btn btn-link mt-2"><i class="bi bi-arrow-left"></i> Back</a>\n    </div>\n  ',document.getElementById("showPatientFormBtn").onclick=()=>{!function(){const e=document.getElementById("formAboveList"),t=(new Date).toISOString().slice(0,10);e.innerHTML=`\n    <div class="card mb-3">\n      <div class="card-body">\n        <h5 class="mb-3"><i class="bi bi-person-plus"></i> New Patient</h5>\n        <form id="pForm">\n          <label class="form-label mb-0">Date of Registration</label>\n          <input  type="date" id="dor" class="form-control mb-2" value="${t}" max="${t}" required>\n          <label class="form-label mb-0">Date of Birth</label>\n          <input  type="date" id="dob" class="form-control" value="" max="${t}">\n          <small id="ageLive" class="text-muted mb-2 d-block"></small>\n          <input  id="name"  class="form-control mb-2" placeholder="Full Name" required value="">\n          <select id="sex" class="form-select mb-2" required>\n            <option value="">Sex</option>\n            <option value="M">Male</option>\n            <option value="F">Female</option>\n            <option value="O">Other</option>\n          </select>\n          <input id="phone" class="form-control mb-2" placeholder="Phone 024-xxx-xxxx" value="">\n          <input id="address" class="form-control mb-2" placeholder="Address" value="">\n          <select id="idType" class="form-select mb-2">\n            <option value="">ID Type (optional)</option>\n            <option value="NIN">National ID</option>\n            <option value="DL">Driver's License</option>\n            <option value="VOT">Voter's Card</option>\n          </select>\n          <input id="idNumber" class="form-control mb-3" placeholder="ID Number" value="">\n          \x3c!-- Family/Contact Linking --\x3e\n          <div class="mb-3">\n            <label class="form-label">Link Family/Contact</label>\n            <div class="input-group mb-2">\n              <input id="linkSearch" class="form-control" placeholder="Search by ID or Name">\n              <select id="relationType" class="form-select" style="max-width:140px">\n                <option value="Mother">Mother</option>\n                <option value="Father">Father</option>\n                <option value="Spouse">Spouse</option>\n                <option value="Child">Child</option>\n                <option value="Other">Other</option>\n              </select>\n              <button type="button" class="btn btn-outline-primary" id="addLinkBtn">Link</button>\n            </div>\n            <div id="linkSearchResult" class="small"></div>\n            <ul class="list-group mt-2" id="linkedContactsList"></ul>\n          </div>\n          ${(db.customPatientFields||[]).map(e=>renderCustomField(e,{})).join("")}\n          <div class="mb-3">\n            <button type="button" class="btn btn-sm btn-success" id="addFieldBtn"><i class="bi bi-plus"></i> Add Field</button>\n            <ul class="list-group mt-2" id="customFieldList">\n              ${(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join("")}\n            </ul>\n          </div>\n          <div class="d-flex justify-content-between">\n            <button class="btn btn-primary">Add</button>\n            <button type="button" class="btn btn-secondary" id="cancelF">Cancel</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  `;let n=[];const l=document.getElementById("linkSearch"),i=document.getElementById("linkSearchResult"),a=document.getElementById("linkedContactsList"),o=document.getElementById("relationType");function s(){a.innerHTML=n.length?n.map((e,t)=>`<li class="list-group-item d-flex justify-content-between align-items-center"><span><b>${e.relation}</b>: ${e.name} [${e.patientID}]</span><button type="button" class="btn btn-sm btn-danger" data-i="${t}"><i class="bi bi-x"></i></button></li>`).join(""):"",a.querySelectorAll("button[data-i]").forEach(e=>e.onclick=()=>{n.splice(e.dataset.i,1),s()})}document.getElementById("addLinkBtn").onclick=()=>{const e=l.value.trim().toLowerCase();if(!e)return;const t=(db.patients||[]).find(t=>t.patientID?.toLowerCase()===e||t.name?.toLowerCase()===e);t?(n.push({relation:o.value,patientID:t.patientID,name:t.name}),s(),l.value="",i.innerHTML=""):i.innerHTML='<span class="text-danger">No patient found.</span>'},l.oninput=function(){const e=this.value.trim().toLowerCase();if(!e)return void(i.innerHTML="");const t=(db.patients||[]).find(t=>t.patientID?.toLowerCase()===e||t.name?.toLowerCase()===e);t?i.innerHTML=`<span class="text-success">Found: <b>${t.name}</b> [${t.patientID}]</span>`:e.length>2?i.innerHTML='<span class="text-warning">No patient found.</span>':i.innerHTML=""};const d=document.getElementById("pForm"),c=d.dob,r=d.querySelector("#ageLive"),m=()=>r.textContent=c.value?`Age: ${calculateAge(c.value)}`:"";function u(){const e=document.getElementById("customFieldList");e&&(e.innerHTML=(db.customPatientFields||[]).map((e,t)=>renderFieldRow(e,t)).join("")),b()}function b(){document.querySelectorAll(".editFieldBtn").forEach(e=>e.onclick=()=>showFieldFormPatient(db.customPatientFields[e.dataset.fidx],e.dataset.fidx)),document.querySelectorAll(".deleteFieldBtn").forEach(e=>e.onclick=()=>{confirm("Delete this field? Data already captured for this field will be kept in old records.")&&(db.customPatientFields.splice(e.dataset.fidx,1),saveDb(),u())}),document.querySelectorAll(".moveUpBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t>0&&([db.customPatientFields[t-1],db.customPatientFields[t]]=[db.customPatientFields[t],db.customPatientFields[t-1]],saveDb(),u())}),document.querySelectorAll(".moveDownBtn").forEach(e=>e.onclick=()=>{const t=+e.dataset.fidx;t<db.customPatientFields.length-1&&([db.customPatientFields[t],db.customPatientFields[t+1]]=[db.customPatientFields[t+1],db.customPatientFields[t]],saveDb(),u())})}c.addEventListener("input",m),m(),document.getElementById("addFieldBtn").onclick=e=>{e.preventDefault(),window.showFieldFormPatient()},u(),document.getElementById("cancelF").onclick=e=>{e.preventDefault(),document.getElementById("formAboveList").style.display="none",document.getElementById("patientTableWrap").style.display="",document.getElementById("showPatientFormBtn").style.display=""},d.onsubmit=e=>{e.preventDefault();const t={};t.registrationDate=d.dor.value,t.dob=d.dob.value,t.name=d.name.value.trim(),t.sex=d.sex.value,t.phone=d.phone.value.trim(),t.address=d.address.value.trim(),t.idType=d.idType.value,t.idNumber=d.idNumber.value.trim(),t.age=t.dob?calculateAge(t.dob):"",t.patientID=generatePatientID(d.dor.value),t.customFields={},(db.customPatientFields||[]).forEach(e=>{const n=document.getElementById(`custom_${e.name}`);n&&(t.customFields[e.name]=n.value)}),t.linkedContacts=n.slice(),db.patients.push(t),saveDb(),renderPatientList(document.getElementById("app"))},u(),document.getElementById("patientTableWrap").style.display="none",document.getElementById("showPatientFormBtn").style.display="none",document.getElementById("formAboveList").style.display=""}()},document.getElementById("searchForm").onsubmit=e=>{e.preventDefault();t(Object.fromEntries(new FormData(e.target)),!0)},t(),document.getElementById("searchForm").onsubmit=e=>{e.preventDefault(),t(Object.fromEntries(new FormData(e.target)))},n(),(db.customPatientFields||[]).forEach(e=>{if("select_multiple"===e.type){const t=document.querySelectorAll(`input[id^="custom_${e.name}_"]`),n=document.getElementById(`custom_${e.name}`);t.length>0&&n&&t.forEach(e=>{e.addEventListener("change",()=>{const e=Array.from(t).filter(e=>e.checked).map(e=>e.value);n.value=e.join(", ")})})}})}function close(){document.getElementById("modalWrap").className="",document.getElementById("modalWrap").innerHTML=""}function renderCustomField(e,t){const n=t.customFields&&t.customFields[e.name]||"",l=`custom_${e.name}`;switch(e.type){case"text":default:return`<input id="${l}" class="form-control mb-2" placeholder="${e.label||e.name}" value="${n}">`;case"integer":return`<input id="${l}" type="number" step="1" class="form-control mb-2" placeholder="${e.label||e.name}" value="${n}">`;case"decimal":return`<input id="${l}" type="number" step="any" class="form-control mb-2" placeholder="${e.label||e.name}" value="${n}">`;case"date":return`<input id="${l}" type="date" class="form-control mb-2" value="${n}">`;case"select_one":{let t=e.choices;return"string"==typeof t&&(t=t.split(",").map(e=>e.trim()).filter(Boolean)),Array.isArray(t)||(t=[]),`<select id="${l}" class="form-select mb-2"><option value="">${e.label||e.name}</option>`+t.map(e=>`<option value="${e}"${n===e?" selected":""}>${e}</option>`).join("")+"</select>"}case"select_multiple":{let t=e.choices;return"string"==typeof t&&(t=t.split(",").map(e=>e.trim()).filter(Boolean)),Array.isArray(t)||(t=[]),'<div class="mb-2">'+t.map((e,t)=>{const i=n.split(",").map(e=>e.trim()).includes(e)?"checked":"";return`<div class="form-check form-check-inline">\n              <input class="form-check-input" type="checkbox" id="${l}_${t}" value="${e}" ${i}>\n              <label class="form-check-label" for="${l}_${t}">${e}</label>\n            </div>`}).join("")+`<input type="hidden" id="${l}" value="${n}"></div>`}case"note":return`<div class="alert alert-secondary mb-2">${e.label||e.name}</div>`}}function renderFieldRow(e,t){return`<li class="list-group-item d-flex justify-content-between align-items-center">\n      <span><b>${e.label||e.name}</b> <small class="text-muted">(${e.type})</small></span>\n      <span>\n        <button type="button" class="btn btn-sm btn-outline-primary editFieldBtn" data-fidx="${t}"><i class="bi bi-pencil"></i></button>\n        <button type="button" class="btn btn-sm btn-outline-danger deleteFieldBtn" data-fidx="${t}"><i class="bi bi-trash"></i></button>\n        <button type="button" class="btn btn-sm btn-outline-secondary moveUpBtn" data-fidx="${t}"><i class="bi bi-arrow-up"></i></button>\n        <button type="button" class="btn btn-sm btn-outline-secondary moveDownBtn" data-fidx="${t}"><i class="bi bi-arrow-down"></i></button>\n      </span>\n    </li>`}