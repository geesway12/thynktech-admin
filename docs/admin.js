import{db,saveDb}from"./db.js";import*as exportUtils from"./export.js";import{renderRegisterMgmt}from"./registers.js";import{renderServiceVisitSelector,renderServiceEntry}from"./services.js";import{renderPatientList}from"./patients.js";import{renderVisitLog}from"./visits.js";import{renderReports}from"./reports.js";import{renderAppointmentList}from"./appointments.js";function isAdminPasswordExpired(){const e=db.users.find(e=>"admin"===e.role?.toLowerCase());if(!e)return!1;const t=e.lastPasswordChange||0;return(Date.now()-t)/864e5>30}function showAdminPasswordChange(e,t=!1){const n=document.createElement("div");n.className="modal active",n.innerHTML=`\n    <div class="modal-content mx-auto" style="max-width:400px;">\n      <h5>Change Admin Password</h5>\n      ${t?'<div class="alert alert-warning small">Password expired. Please set a new password.</div>':""}\n      <form id="adminPassForm">\n        <div class="mb-3">\n          <label>Current Password</label>\n          <input type="password" class="form-control" name="currentPassword" required>\n        </div>\n        <div class="mb-3">\n          <label>New Password</label>\n          <input type="password" class="form-control" name="newPassword" required>\n        </div>\n        <div class="d-flex justify-content-between">\n          <button type="submit" class="btn btn-primary btn-sm">Save</button>\n          <button type="button" class="btn btn-secondary btn-sm" id="cancelAdminPass">Cancel</button>\n        </div>\n        <div id="adminPassMsg" class="mt-2 small"></div>\n      </form>\n    </div>`,document.body.appendChild(n),document.getElementById("cancelAdminPass").onclick=()=>{t||document.body.removeChild(n)},document.getElementById("adminPassForm").onsubmit=function(e){e.preventDefault();const t=this.currentPassword.value,i=this.newPassword.value,s=db.users.find(e=>"admin"===e.role?.toLowerCase());if(!s||s.password!==t)return this.querySelector("#adminPassMsg").textContent="Current password is incorrect.",void(this.querySelector("#adminPassMsg").className="text-danger mt-2 small");s.password=i,s.lastPasswordChange=Date.now(),saveDb(),this.querySelector("#adminPassMsg").textContent="Password updated!",this.querySelector("#adminPassMsg").className="text-success mt-2 small",setTimeout(()=>document.body.removeChild(n),1200)}}export function renderFacilitySetup(e){e.innerHTML='\n    <div class="container my-5">\n      <div class="card shadow-lg">\n        <div class="card-header bg-primary text-white">\n          <h3><i class="bi bi-hospital"></i> Facility Setup</h3>\n        </div>\n        <div class="card-body">\n          <form id="facForm" autocomplete="off">\n            <select class="form-select mb-2" id="regionSelect" required>\n              <option value="">Select Region</option>\n            </select>\n            <select class="form-select mb-2" id="districtSelect" required disabled>\n              <option value="">Select District</option>\n            </select>\n            <select class="form-select mb-2" id="subDistrictSelect" required disabled>\n              <option value="">Select Sub-district</option>\n            </select>\n            <select class="form-select mb-2" id="facilitySelect" required disabled>\n              <option value="">Select Facility</option>\n            </select>\n            <input class="form-control mb-2" id="facilityNameManual" placeholder="Facility Name (if not listed)">\n            <input class="form-control mb-2" id="community"     placeholder="Community"     required>\n            <input class="form-control mb-2" id="latlong"       placeholder="Latitude, Longitude (optional)">\n            <input class="form-control mb-2" type="file" id="facilityImage" accept="image/*">\n            <input class="form-control mb-3" id="facilityContact" placeholder="Contact Info (optional)">\n\n            <hr><h5>Super-Admin Account</h5>\n            <input class="form-control mb-2" id="adminUser" placeholder="Admin Username" required>\n            <input class="form-control mb-3" id="adminPass" type="password" placeholder="Admin Password" required>\n\n            <button class="btn btn-primary w-100"><i class="bi bi-save"></i> Save & Continue</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  ';const t=["data/Ahafo.json","data/Ashanti.json","data/Bono_East.json","data/Bono.json","data/Central.json","data/Eastern.json","data/Greater_Accra.json","data/North_East.json","data/Northern.json","data/Oti.json","data/Savannah.json","data/Upper_East.json","data/Upper_West.json","data/Volta.json","data/Western.json","data/Western_North.json"],n=document.getElementById("regionSelect"),i=t.map(e=>e.split("/").pop().replace(".json","").replace(/_/g," "));i.forEach((e,i)=>{const s=document.createElement("option");s.value=t[i],s.textContent=e,n.appendChild(s)}),n.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}));const s=document.getElementById("districtSelect"),a=document.getElementById("subDistrictSelect"),r=document.getElementById("facilitySelect"),l=document.getElementById("facilityNameManual");function o(e,t){e.innerHTML=`<option value="">Select ${t}</option>`,e.disabled=!0}n.addEventListener("change",async function(){if(o(s,"District"),o(a,"Sub-district"),o(r,"Facility"),l.value="",!n.value||"Other"===n.value)return s.disabled=!0,a.disabled=!0,r.disabled=!0,void(l.disabled=!1);s.disabled=!1;try{const e=await fetch(n.value),t=await e.json();[...new Set(t.map(e=>e.District))].forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e,s.appendChild(t)}),s.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}catch(e){s.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}}),s.addEventListener("change",async function(){if(o(a,"Sub-district"),o(r,"Facility"),l.value="",!s.value||"Other"===s.value||"Other"===n.value)return a.disabled=!0,r.disabled=!0,void(l.disabled=!1);a.disabled=!1;try{const e=await fetch(n.value),t=await e.json();[...new Set(t.filter(e=>e.District===s.value).map(e=>e["Sub-district"]))].forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e,a.appendChild(t)}),a.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}catch(e){a.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}}),a.addEventListener("change",async function(){if(o(r,"Facility"),l.value="",!a.value||"Other"===a.value||"Other"===s.value||"Other"===n.value)return r.disabled=!0,void(l.disabled=!1);r.disabled=!1;try{const e=await fetch(n.value),t=await e.json();t.filter(e=>e.District===s.value&&e["Sub-district"]===a.value).map(e=>e.Facility).forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e,r.appendChild(t)}),r.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}catch(e){r.appendChild(Object.assign(document.createElement("option"),{value:"Other",textContent:"Other"}))}}),r.addEventListener("change",function(){"Other"!==r.value&&r.value?(l.disabled=!0,l.value=""):l.disabled=!1}),l.addEventListener("input",function(){l.value.trim()&&(r.value="")}),document.getElementById("facForm").onsubmit=e=>{e.preventDefault();const n=e.target.facilitySelect.value&&"Other"!==e.target.facilitySelect.value?e.target.facilitySelect.value:e.target.facilityNameManual.value.trim()||e.target.facilityName.value.trim();db.facility={name:n,region:(()=>{if("Other"===e.target.regionSelect.value)return"Other";const n=t.indexOf(e.target.regionSelect.value);return n>=0?i[n]:""})(),district:"Other"===e.target.districtSelect.value?"Other":e.target.districtSelect.value,subDistrict:"Other"===e.target.subDistrictSelect.value?"Other":e.target.subDistrictSelect.value,community:e.target.community.value,latlong:e.target.latlong.value,image:e.target.facilityImage.files[0]?URL.createObjectURL(e.target.facilityImage.files[0]):null,contact:e.target.facilityContact.value},db.users=[{username:e.target.adminUser.value,password:e.target.adminPass.value,role:"Admin",lastPasswordChange:Date.now()}],db.roles=[{name:"Admin",permissions:["all"]}],db.currentUser=db.users[0],saveDb(),window.location.hash="#admin-dashboard"}}export function renderAdminDashboard(e){isAdminPasswordExpired()&&showAdminPasswordChange(e,!0);const t=db.facility||{};let n=db.currentUser&&"admin"===db.currentUser.role?.toLowerCase()?db.currentUser.username:"";const i=`\n    <div class="alert alert-info small mb-2 d-flex align-items-center">\n      <img src="${t.image||"logo.png"}" height="36" class="me-2" style="border-radius:8px;">\n      <b>${t.name||""}</b>\n      <span class="ms-2 text-muted">${t.region||""} / ${t.district||""} / ${t.community||""}</span>\n      ${n?`<span class='ms-auto'><a href="#profile" id="adminProfileLink" class="text-decoration-none text-dark"><i class='bi bi-person-circle'></i> <b>${n}</b></a></span>`:""}\n    </div>`;setTimeout(()=>{if(db.currentUser&&db.currentUser.lastPasswordChange){(Date.now()-db.currentUser.lastPasswordChange)/864e5>30&&(alert("Your password is expired. Please update your password."),window.location.hash="#profile")}},200),setTimeout(()=>{const t=document.getElementById("adminProfileLink");t&&(t.onclick=e=>{e.preventDefault(),window.location.hash="#profile"}),e.querySelectorAll('a[href="#appointments"]').forEach(t=>{t.onclick=t=>{t.preventDefault();let n=document.getElementById("app")||e;renderAppointmentList(n),window.location.hash="#appointments"}})},100),e.innerHTML=`\n  <style>\n    @media (min-width: 768px) {\n      .dashboard-row-equal {\n        display: flex;\n        flex-wrap: wrap;\n      }\n      .dashboard-row-equal > [class^='col-'] {\n        display: flex;\n        flex-direction: column;\n      }\n      .dashboard-row-equal .card {\n        flex: 1 1 auto;\n        height: 100%;\n        min-height: 350px;\n      }\n    }\n    @media (max-width: 767.98px) {\n      .dashboard-row-equal .card {\n        min-height: unset;\n      }\n    }\n  </style>\n  <div class="container my-4">\n    ${db.facility?i:""}\n    <div class="row mt-4 g-3 dashboard-row-equal">\n      <div class="col-12 col-md-6 d-flex">\n        <div class="card shadow mb-4 flex-fill">\n          <div class="card-body d-flex flex-column">\n            <h5><i class="bi bi-person-gear"></i> Admin Quick Actions</h5>\n            <div class="list-group mb-3 flex-grow-1">\n              <a href="#user-mgmt" class="list-group-item list-group-item-action"><i class="bi bi-people me-2"></i>User Management</a>\n              <a href="#patient-reg" class="list-group-item list-group-item-action"><i class="bi bi-person-plus me-2"></i>Patient Registration</a>\n              <a href="#visit-log" class="list-group-item list-group-item-action"><i class="bi bi-journal-text me-2"></i>Visit Logging</a>\n              <a href="#register-mgmt" class="list-group-item list-group-item-action"><i class="bi bi-journals me-2"></i>Register Management</a>\n              <a href="#appointments" class="list-group-item list-group-item-action"><i class="bi bi-calendar-event me-2"></i>Appointments</a>\n              <a href="#reports" class="list-group-item list-group-item-action"><i class="bi bi-bar-chart me-2"></i>Reports</a>\n              ${db.registers?.length?`<a href="#service-entry?reg=${encodeURIComponent(db.registers[0].name)}" class="list-group-item list-group-item-action"><i class="bi bi-clipboard-plus me-2"></i>Open Service Registers</a>`:""}\n              <a href="#admin-export" class="list-group-item list-group-item-action"><i class="bi bi-cloud-arrow-down me-2"></i>Export & Backup</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-12 col-md-6 d-flex">\n        <div class="card shadow mb-4 flex-fill">\n          <div class="card-body d-flex flex-column">\n            <h5><i class="bi bi-calendar-event"></i> Appointments</h5>\n            <div id="adminAptList" class="flex-grow-1"></div>\n            <div class="text-end mt-3">\n              <a href="#appointments" class="btn btn-outline-primary btn-sm"><i class="bi bi-calendar-event"></i> View All</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  `,function(){const t=e.querySelector("#adminAptList");if(!t)return;const n=new Date,i=new Date(n);i.setDate(n.getDate()+7);let s=(db.appointments||[]).filter(e=>e.appointmentDate).map(e=>({...e,due:new Date(e.appointmentDate)})).filter(e=>!isNaN(e.due)&&e.due>=new Date(n.toDateString())&&e.due<=i).sort((e,t)=>e.due-t.due).slice(0,10);s.length?t.innerHTML=`\n      <ul class="list-group list-group-flush">\n        ${s.map(e=>{const t=Math.ceil((e.due-n)/864e5);let i="";t<0?i='<span class="badge bg-danger ms-2">Overdue</span>':0===t?i='<span class="badge bg-warning text-dark ms-2">Today</span>':t<=3&&(i=`<span class="badge bg-info text-dark ms-2">${t} day${t>1?"s":""}</span>`);let s="";if(e.status){s=`<span class="badge bg-${"Completed"===e.status?"success":"Scheduled"===e.status?"primary":"secondary"} ms-2">${e.status}</span>`}return`\n            <li class="list-group-item d-flex align-items-center justify-content-between py-2">\n              <div>\n                <i class="bi bi-person-circle me-1"></i>\n                <b>${e.patientName||e.patientID}</b>\n                <span class="text-muted small ms-2">${e.serviceType||""}</span>\n              </div>\n              <div>\n                <span class="small">${e.appointmentDate}</span>\n                ${i} ${s}\n              </div>\n            </li>\n          `}).join("")}\n      </ul>\n    `:t.innerHTML='<div class="text-muted small">No upcoming appointments for this week.</div>'}();const s=e.querySelector("#logoutBtn");s&&(s.onclick=()=>{db.currentUser=null,saveDb(),window.location.hash="#login"});const a=e.querySelector("#backupBtn");a&&(a.onclick=()=>{const t=exportUtils.encryptData(JSON.stringify(db)),n=new Blob([t],{type:"application/json"}),i=URL.createObjectURL(n),s=document.createElement("a");s.href=i,s.download="system-backup.json",document.body.appendChild(s),s.click(),setTimeout(()=>{document.body.removeChild(s),URL.revokeObjectURL(i)},100),e.querySelector("#backupMsg").innerHTML='<div class="text-success">Encrypted backup downloaded.</div>'});const r=e.querySelector("#restoreFile");r&&r.addEventListener("change",t=>{const n=t.target.files[0];if(!n)return;if(!confirm("Are you sure you want to restore from backup? This will overwrite all current data."))return;const i=new FileReader;i.onload=function(t){try{let n;try{n=exportUtils.decryptData(t.target.result)}catch{n=t.target.result}const i=JSON.parse(n);Object.keys(db).forEach(e=>delete db[e]),Object.assign(db,i),saveDb(),e.querySelector("#backupMsg").innerHTML='<div class="text-success">Restore complete. Please reload the page.</div>'}catch(t){e.querySelector("#backupMsg").innerHTML='<div class="text-danger">Restore failed: Invalid or corrupted encrypted file.</div>'}},i.readAsText(n)});const l=e.querySelector("#chooseShareBtn"),o=e.querySelector("#shareModal");l&&o&&(l.onclick=()=>{o.className="active";const t=`\n        <label class="form-label mt-3">Select Specific Registers (optional)</label>\n        ${(db.registers||[]).map(e=>`\n          <div class="form-check">\n            <input class="form-check-input" type="checkbox" value="${e.name}" id="reg-${e.name}">\n            <label class="form-check-label" for="reg-${e.name}">${e.name}</label>\n          </div>\n        `).join("")}\n      `;o.innerHTML=`\n        <div class="modal-content mx-auto">\n          <h5>Select Data to Export</h5>\n          <form id="shareForm">\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="patients" id="sharePatients" checked>\n              <label class="form-check-label" for="sharePatients">Patients</label>\n            </div>\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="visits" id="shareVisits" checked>\n              <label class="form-check-label" for="shareVisits">Visits</label>\n            </div>\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="services" id="shareServices" checked>\n              <label class="form-check-label" for="shareServices">Service Entries</label>\n            </div>\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="registers" id="shareRegisters" checked>\n              <label class="form-check-label" for="shareRegisters">Service Registers</label>\n            </div>\n            ${t}\n            <div class="d-flex justify-content-between mt-3">\n              <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-check-circle"></i> Export</button>\n              <button type="button" class="btn btn-secondary btn-sm" id="cancelShare"><i class="bi bi-x-circle"></i> Cancel</button>\n            </div>\n          </form>\n        </div>`,document.getElementById("cancelShare").onclick=()=>{o.className="",o.innerHTML=""},document.getElementById("shareForm").onsubmit=t=>{t.preventDefault();const n={};if(document.getElementById("sharePatients").checked&&(n.patients=db.patients||[]),document.getElementById("shareVisits").checked&&(n.visits=db.visits||[]),document.getElementById("shareServices").checked){const e=Array.from(document.querySelectorAll("input[id^=reg-]:checked")).map(e=>e.value);n.services=e.length?(db.services||[]).filter(t=>e.includes(t.formName)):db.services||[]}if(document.getElementById("shareRegisters").checked){const e=Array.from(document.querySelectorAll("input[id^=reg-]:checked")).map(e=>e.value);n.registers=e.length?(db.registers||[]).filter(t=>e.includes(t.name)):db.registers||[]}const i=exportUtils.encryptData(JSON.stringify(n)),s=new Blob([i],{type:"application/json"}),a=URL.createObjectURL(s),r=document.createElement("a");r.href=a,r.download="shared-data.json",document.body.appendChild(r),r.click(),setTimeout(()=>{document.body.removeChild(r),URL.revokeObjectURL(a)},100),e.querySelector("#shareMsg").innerHTML='<div class="text-success">Selected data exported. Share via USB or SD card.</div>',o.className="",o.innerHTML=""}});const c=e.querySelector("#importSharedFile");c&&c.addEventListener("change",t=>{const n=t.target.files[0];if(!n)return;const i=new FileReader;i.onload=function(t){try{let n;try{n=exportUtils.decryptData(t.target.result)}catch{n=t.target.result}const i=JSON.parse(n);let s={patients:0,visits:0,services:0,registers:0};i.patients?.forEach(e=>{db.patients.some(t=>t.id===e.id)||(db.patients.push(e),s.patients++)}),i.visits?.forEach(e=>{db.visits.some(t=>t.id===e.id)||(db.visits.push(e),s.visits++)}),i.services?.forEach(e=>{db.services.some(t=>t.id===e.id)||(db.services.push(e),s.services++)}),i.registers?.forEach(e=>{db.registers.some(t=>t.id&&e.id&&t.id===e.id||t.name&&e.name&&t.name===e.name)||(db.registers.push(e),s.registers++)}),saveDb(),e.querySelector("#shareMsg").innerHTML=`<div class="text-success">\n            Import complete: ${s.patients} patients, ${s.visits} visits, ${s.services} service entries${s.registers?`, ${s.registers} registers`:""} added.\n          </div>`}catch(t){e.querySelector("#shareMsg").innerHTML='<div class="text-danger">Import failed: Invalid or corrupted file.</div>'}},i.readAsText(n)})}export function renderUserManagement(e){function t(){document.getElementById("userBody").innerHTML=db.users.map((e,t)=>`\n      <tr>\n        <td>${e.username}</td><td>${e.role}</td>\n        <td>\n          <button class="btn btn-sm btn-accent me-1" data-i="${t}" data-act="edit"><i class="bi bi-pencil"></i></button>\n          <button class="btn btn-sm btn-danger" data-i="${t}" data-act="del"><i class="bi bi-trash"></i></button>\n        </td>\n      </tr>`).join(""),document.querySelectorAll("[data-act=edit]").forEach(e=>e.onclick=()=>s(db.users[e.dataset.i],e.dataset.i)),document.querySelectorAll("[data-act=del]").forEach(e=>e.onclick=()=>{confirm("Delete user?")&&(db.users.splice(e.dataset.i,1),saveDb(),t())})}function n(){document.getElementById("roleList").innerHTML=db.roles.map((e,t)=>`\n      <li class="list-group-item d-flex justify-content-between align-items-center">\n        <span><b>${e.name}</b> <small class="text-muted">(${e.permissions.join(", ")})</small></span>\n        <div>\n          <button class="btn btn-sm btn-accent me-1" data-i="${t}" data-act="editRole"><i class="bi bi-pencil"></i></button>\n          <button class="btn btn-sm btn-danger" data-i="${t}" data-act="delRole"><i class="bi bi-trash"></i></button>\n        </div>\n      </li>`).join(""),document.querySelectorAll("[data-act=editRole]").forEach(e=>e.onclick=()=>i(db.roles[e.dataset.i],e.dataset.i)),document.querySelectorAll("[data-act=delRole]").forEach(e=>e.onclick=()=>{confirm("Delete role?")&&(db.roles.splice(e.dataset.i,1),saveDb(),n())})}function i(e={},t=null){const i=document.getElementById("uModal"),s=e.permissions||[];function a(){i.className="",i.innerHTML=""}i.innerHTML=`\n      <div class="modal-content mx-auto">\n        <h5>${e.name?"Edit":"Add"} Role</h5>\n        <form id="rForm" class="mt-2">\n          <input class="form-control mb-2" id="rname" placeholder="Role Name" value="${e.name||""}" required>\n          <label class="form-label">Permissions</label>\n          ${["patient-reg","visit-log","service-entry","reports","all"].map(e=>`\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" id="perm-${e}" value="${e}" ${s.includes(e)?"checked":""}>\n              <label class="form-check-label" for="perm-${e}">${e}</label>\n            </div>`).join("")}\n          <div class="d-flex justify-content-between mt-3">\n            <button class="btn btn-primary">${e.name?"Save":"Add"}</button>\n            <button type="button" class="btn btn-secondary" id="cancelR">Cancel</button>\n          </div>\n        </form>\n      </div>`,i.className="active",i.onclick=e=>{e.target===i&&a()},document.getElementById("cancelR").onclick=a,document.getElementById("rForm").onsubmit=e=>{e.preventDefault();const i={name:e.target.rname.value.trim(),permissions:Array.from(e.target.querySelectorAll("input[type=checkbox]:checked")).map(e=>e.value)};null!==t?db.roles[t]=i:db.roles.push(i),saveDb(),a(),n()}}function s(e={},n=null){const i=document.getElementById("uModal");function s(){i.className="",i.innerHTML=""}e.assignedRegisters=e.assignedRegisters||[],i.innerHTML=`\n      <div class="modal-content mx-auto">\n        <h5>${e.username?"Edit":"Add"} User</h5>\n        <form id="uForm" class="mt-2">\n          <input class="form-control mb-2" id="uname" placeholder="Username" value="${e.username||""}" required>\n          <input class="form-control mb-2" id="upass" type="password" placeholder="${e.username?"New password (optional)":"Password"}" ${e.username?"":"required"}>\n          <select class="form-select mb-3" id="urole" required>\n            <option value="">Role...</option>\n            ${db.roles.map(t=>`<option ${e.role===t.name?"selected":""}>${t.name}</option>`).join("")}\n          </select>\n          <label class="form-label mt-2">Allow Access To:</label>\n          <div class="form-check mb-1">\n            <input class="form-check-input" type="checkbox" id="canPatientReg" ${e.canPatientReg?"checked":""}>\n            <label class="form-check-label" for="canPatientReg">Patient Registration</label>\n          </div>\n          <div class="form-check mb-2">\n            <input class="form-check-input" type="checkbox" id="canVisitLog" ${e.canVisitLog?"checked":""}>\n            <label class="form-check-label" for="canVisitLog">Visit Logging</label>\n          </div>\n          <label class="form-label">Assigned Service Forms</label>\n          <select class="form-select mb-3" id="uregisters" multiple>\n            ${db.registers.map(t=>`<option value="${t.name}" ${e.assignedRegisters?.includes(t.name)?"selected":""}>${t.name}</option>`).join("")}\n          </select>\n          <div class="d-flex justify-content-between">\n            <button class="btn btn-primary">${e.username?"Save":"Add"}</button>\n            <button type="button" class="btn btn-secondary" id="cancelU">Cancel</button>\n          </div>\n        </form>\n      </div>`,i.className="active",i.onclick=e=>{e.target===i&&s()},document.getElementById("cancelU").onclick=s,document.getElementById("uForm").onsubmit=i=>{i.preventDefault();const a={username:i.target.uname.value.trim(),role:i.target.urole.value,password:i.target.upass.value||e.password,canPatientReg:i.target.canPatientReg.checked,canVisitLog:i.target.canVisitLog.checked,assignedRegisters:Array.from(i.target.uregisters.selectedOptions).map(e=>e.value)};null!==n?Object.assign(db.users[n],a):db.users.push(a),saveDb(),s(),t()}}e.innerHTML='\n    <div class="container my-4">\n      <div class="card shadow">\n        <div class="card-header">\n          <h4 class="mb-0"><i class="bi bi-people"></i> User & Role Management</h4>\n        </div>\n        <div class="card-body">\n          <button class="btn btn-primary mb-3" id="addUser"><i class="bi bi-person-plus"></i> Add User</button>\n          <table class="table table-bordered table-sm table-hover align-middle">\n            <thead class="table-light"><tr><th>Username</th><th>Role</th><th>Actions</th></tr></thead>\n            <tbody id="userBody"></tbody>\n          </table>\n          <hr>\n          <h5>Role Management</h5>\n          <button class="btn btn-outline-secondary btn-sm mb-2" id="addRole"><i class="bi bi-plus-circle"></i> Add Role</button>\n          <ul class="list-group mb-3" id="roleList"></ul>\n          <div id="uModal"></div>\n          <a href="#admin-dashboard" class="btn btn-link mt-3"><i class="bi bi-arrow-left"></i> Back</a>\n        </div>\n      </div>\n    </div>\n  ',t(),n(),document.getElementById("addUser").onclick=()=>s(),document.getElementById("addRole").onclick=()=>i()}export function renderAdminExportBackupPage(e){const t=db.facility||{},n=`\n    <div class="facility-meta mb-3">\n      ${t.image?`<img src="${t.image}" alt="Facility Logo" style="max-height:60px; margin-bottom:8px;"><br>`:""}\n      <span class="fw-bold">${t.name||""}</span>\n      <div class="text-muted small">\n        ${[t.region&&`Region: ${t.region}`,t.district&&`District: ${t.district}`,t.community&&`Community: ${t.community}`,t.contact&&`Contact: ${t.contact}`].filter(Boolean).join(" | ")}\n      </div>\n    </div>\n  `;e.innerHTML=`\n    <style>\n      @media (min-width: 768px) {\n        .dashboard-row-equal {\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .dashboard-row-equal > [class^='col-'] {\n          display: flex;\n          flex-direction: column;\n        }\n        .dashboard-row-equal .card {\n          flex: 1 1 auto;\n          height: 100%;\n          min-height: 350px;\n        }\n      }\n      @media (max-width: 767.98px) {\n        .dashboard-row-equal .card {\n          min-height: unset;\n        }\n      }\n    </style>\n    <div class="container my-4">\n      ${n}\n      <div class="row mt-4 g-3 dashboard-row-equal">\n        <div class="col-12 col-md-6 d-flex">\n          <div class="card shadow mb-4 flex-fill">\n            <div class="card-body d-flex flex-column">\n              <h5><i class="bi bi-cloud-arrow-down"></i> Export & Backup</h5>\n              <div class="list-group mb-3 flex-grow-1">\n                <button class="list-group-item list-group-item-action" id="exportPatients"><i class="bi bi-people me-2"></i> Export Patients</button>\n                <button class="list-group-item list-group-item-action" id="exportVisits"><i class="bi bi-journal-medical me-2"></i> Export Visits</button>\n                <button class="list-group-item list-group-item-action" id="exportServices"><i class="bi bi-ui-checks-grid me-2"></i> Export Services</button>\n                <button class="list-group-item list-group-item-action" id="exportSingle"><i class="bi bi-file-earmark-pdf me-2"></i> Single Patient (PDF)</button>\n                <button class="list-group-item list-group-item-action" id="exportRegisters"><i class="bi bi-clipboard-data me-2"></i> Export Registers</button>\n                <button class="list-group-item list-group-item-action" id="exportSetup"><i class="bi bi-cloud-arrow-up me-2"></i> Export Setup</button>\n                <button class="list-group-item list-group-item-action" id="backupBtn"><i class="bi bi-download me-2"></i> Download Backup</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="col-12 col-md-6 d-flex">\n          <div class="card shadow mb-4 flex-fill">\n            <div class="card-body d-flex flex-column">\n              <h5><i class="bi bi-upload"></i> Import & Restore</h5>\n              <div class="list-group mb-3 flex-grow-1">\n                <label class="list-group-item list-group-item-action" style="cursor:pointer;">\n                  <i class="bi bi-upload me-2"></i> Import Patients\n                  <input type="file" id="importPatients" hidden>\n                </label>\n                <label class="list-group-item list-group-item-action" style="cursor:pointer;">\n                  <i class="bi bi-upload me-2"></i> Import Visits\n                  <input type="file" id="importVisits" hidden>\n                </label>\n                <label class="list-group-item list-group-item-action" style="cursor:pointer;">\n                  <i class="bi bi-upload me-2"></i> Import Services\n                  <input type="file" id="importServices" hidden>\n                </label>\n                <label class="list-group-item list-group-item-action" style="cursor:pointer;">\n                  <i class="bi bi-upload me-2"></i> Restore Backup\n                  <input type="file" id="restoreFile" hidden>\n                </label>\n              </div>\n              <div id="importMsg" class="small mt-2 text-muted"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="text-center mt-4">\n        <a href="#admin-dashboard" id="backToDashboardBtn" class="btn btn-link text-primary" style="font-size:1.1rem;">\n          <i class="bi bi-arrow-left-circle-fill me-1"></i> Back to Dashboard\n        </a>\n      </div>\n    </div>\n  `,e.querySelector("#exportPatients")?.addEventListener("click",exportUtils.exportPatients),e.querySelector("#exportVisits")?.addEventListener("click",exportUtils.exportVisits),e.querySelector("#exportServices")?.addEventListener("click",exportUtils.exportServiceDelivery),e.querySelector("#exportSingle")?.addEventListener("click",()=>{const e=prompt("Enter Patient ID to export:");e&&exportUtils.exportPatientA4(e.trim())}),e.querySelector("#exportRegisters")?.addEventListener("click",exportUtils.exportRegisters),e.querySelector("#exportSetup")?.addEventListener("click",()=>{const e=prompt("Enter username to export (leave blank to export all users):");let t=db.users,n=db.registers;if(e){const i=db.users.find(t=>t.username===e.trim());if(!i)return alert("User not found.");t=[i],n=Array.isArray(i.assignedRegisters)&&i.assignedRegisters.length?db.registers.filter(e=>i.assignedRegisters.includes(e.name)):[]}const i={facility:db.facility,settings:db.settings,users:t,registers:n,roles:db.roles,servicesList:db.servicesList,customPatientFields:db.customPatientFields},s=new Blob([JSON.stringify(i,null,2)],{type:"application/json"}),a=URL.createObjectURL(s),r=document.createElement("a");r.href=a,r.download="system-setup.json",r.click(),URL.revokeObjectURL(a)}),e.querySelector("#backupBtn")?.addEventListener("click",()=>{const e=exportUtils.encryptData(JSON.stringify(db)),t=new Blob([e],{type:"application/json"}),n=URL.createObjectURL(t),i=document.createElement("a");i.href=n,i.download=`thynktech-backup-${(new Date).toISOString().slice(0,10)}.json`,document.body.appendChild(i),i.click(),setTimeout(()=>{document.body.removeChild(i),URL.revokeObjectURL(n)},100)}),e.querySelector("#backToDashboardBtn")?.addEventListener("click",e=>{e.preventDefault(),window.location.hash="#admin-dashboard"}),e.querySelector("#importPatients")?.addEventListener("change",t=>{e.querySelector("#importMsg").textContent="Import Patients not yet implemented."}),e.querySelector("#importVisits")?.addEventListener("change",t=>{e.querySelector("#importMsg").textContent="Import Visits not yet implemented."}),e.querySelector("#importServices")?.addEventListener("change",t=>{e.querySelector("#importMsg").textContent="Import Services not yet implemented."}),e.querySelector("#restoreFile")?.addEventListener("change",t=>{e.querySelector("#importMsg").textContent="Restore Backup not yet implemented."})}